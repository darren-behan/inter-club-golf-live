[{"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/index.js":"1","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/App.js":"2","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/reportWebVitals.js":"3","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/PageNotFound.js":"4","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/API.js":"5","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Home.js":"6","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Login.js":"7","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Matches.js":"8","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/DataAreaContext.js":"9","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Header/index.js":"10","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Profile.js":"11","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Settings.js":"12","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Cards/index.js":"13","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Slider/index.js":"14","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Match.js":"15","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Footer/index.js":"16","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/userMatches.js":"17","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/UserMatches.js":"18","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/CreateMatch.js":"19","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/Lib.js":"20","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Signup.js":"21","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/PostMatchForm/index.js":"22","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UpdateModal/index.js":"23","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/DeleteModal/index.js":"24","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/FiltersModal/index.js":"25","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/CreateMatchModal/index.js":"26","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/LocalStorage/LocalStorage.service.js":"27","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/SessionStorage/SessionStorage.service.js":"28","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/BurgerMenuIcon/index.js":"29","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/SideBar/index.js":"30","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UserAuthModal/index.js":"31"},{"size":1151,"mtime":1625732892409,"results":"32","hashOfConfig":"33"},{"size":6546,"mtime":1626169618588,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1618193579027,"results":"35","hashOfConfig":"33"},{"size":349,"mtime":1620866088424,"results":"36","hashOfConfig":"33"},{"size":1339,"mtime":1626166857530,"results":"37","hashOfConfig":"33"},{"size":468,"mtime":1625989257958,"results":"38","hashOfConfig":"33"},{"size":6560,"mtime":1626166926740,"results":"39","hashOfConfig":"33"},{"size":1523,"mtime":1625800038954,"results":"40","hashOfConfig":"33"},{"size":111,"mtime":1618193579028,"results":"41","hashOfConfig":"33"},{"size":1623,"mtime":1625801588814,"results":"42","hashOfConfig":"33"},{"size":332,"mtime":1620866354159,"results":"43","hashOfConfig":"33"},{"size":335,"mtime":1623233214988,"results":"44","hashOfConfig":"33"},{"size":3185,"mtime":1625473703884,"results":"45","hashOfConfig":"33"},{"size":734,"mtime":1625110057940,"results":"46","hashOfConfig":"33"},{"size":6263,"mtime":1625800035542,"results":"47","hashOfConfig":"33"},{"size":499,"mtime":1625989253732,"results":"48","hashOfConfig":"33"},{"size":1675,"mtime":1623281462014,"results":"49","hashOfConfig":"50"},{"size":2005,"mtime":1625800060912,"results":"51","hashOfConfig":"33"},{"size":384,"mtime":1625800009583,"results":"52","hashOfConfig":"33"},{"size":473,"mtime":1625474681501,"results":"53","hashOfConfig":"33"},{"size":6604,"mtime":1626145359549,"results":"54","hashOfConfig":"33"},{"size":8060,"mtime":1626171313596,"results":"55","hashOfConfig":"33"},{"size":7040,"mtime":1625297089916,"results":"56","hashOfConfig":"33"},{"size":2281,"mtime":1625292434211,"results":"57","hashOfConfig":"33"},{"size":1579,"mtime":1625292434211,"results":"58","hashOfConfig":"33"},{"size":1344,"mtime":1625561304081,"results":"59","hashOfConfig":"33"},{"size":296,"mtime":1625565531356,"results":"60","hashOfConfig":"33"},{"size":218,"mtime":1625564997041,"results":"61","hashOfConfig":"33"},{"size":1332,"mtime":1625800654445,"results":"62","hashOfConfig":"33"},{"size":4637,"mtime":1625801656219,"results":"63","hashOfConfig":"33"},{"size":1138,"mtime":1625955503973,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"16h9qtu",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"62tzuo",{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"67"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/index.js",[],["141","142"],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/App.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/reportWebVitals.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/PageNotFound.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/API.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Home.js",["143"],"import React from 'react';\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Slider from '../components/Slider';\nimport { Container, Row } from 'react-bootstrap';\n\nfunction Home() {\n\n  return (\n    <>\n    <Header />\n    <Container>\n      <Row className='slider flex-nowrap mt-3 pb-4' style={{ overflowX: 'auto' }}>\n        <Slider />\n      </Row>\n      {/* <Footer /> */}\n    </Container>\n    </>\n  );\n}\n\nexport default Home;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Login.js",["144"],"import React, { useContext, useState, useEffect } from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport LocalStorage from '../services/LocalStorage/LocalStorage.service';\nimport UserAuthModal from \"../components/Modals/UserAuthModal\";\nimport Header from \"../components/Header\";\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst styles = makeStyles({\n\tpaper: {\n\t\tmarginTop: 8,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmargin: 1,\n\t\tbackgroundColor: 'grey'\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: 1\n\t},\n\tsubmit: {\n\t\tmargin: 3\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogess: {\n\t\tposition: 'absolute'\n\t}\n});\n\nfunction Login() {\n\tlet history = useHistory();\n\tconst { isAuthenticated, setIsAuthenticated, loginDataObj, setLoginDataObj, setUserDataObj, setUserAuthResponse, setUserAuthModalShow, userAuthModalShow, form, setForm } = useContext(DataAreaContext);\n\tconst [loading, setLoading] = useState( false );\n\tconst classes = styles();\n\t\n\t// useEffect is listening on load of page\n  // If isAuthenticated changes to true, the user is navigated to the home page \n  useEffect(() => {\n    if(isAuthenticated) {\n      history.push('/');\n    };\n\t}, [isAuthenticated]);\n\n  // Handles updating component state when the user types into the input field\n  const handleInputChange = (event) => {\n\t\tevent.preventDefault();\n    const { name, value } = event.target;\n\t\tsetLoginDataObj({...loginDataObj, [name]: value})\n  };\n\n\tconst actionCodeSettings = {\n\t\turl: 'https://inter-club-golf-live.web.app/login',\n\t\thandleCodeInApp: false\n\t};\n\n\tconst handleLoginSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n\n\t\tfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n\t\t.then(() => {\n\t\t\treturn firebase.auth().signInWithEmailAndPassword(loginDataObj.email, loginDataObj.password);\n\t\t})\n\t\t.then((response) => {\n      if (response.user.emailVerified) {\n\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\tsetUserDataObj(response.user);\n\t\t\t\tLocalStorage.set('AuthToken', `Bearer ${response.user.Aa}`);\n\t\t\t\tsetLoading(false);\n\t\t\t} else {\n\t\t\t\tresponse.user.sendEmailVerification(actionCodeSettings);\n\t\t\t\tsetUserAuthResponse({\n\t\t\t\t\tmessage: \"Your email is not verified. A verification email has been sent to your email address. Please verify your email to continue to login.\",\n\t\t\t\t\tstatus: 200\n\t\t\t\t});\n\t\t\t\tsetLoginDataObj({});\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetUserAuthModalShow(true);\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: 400\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t});\n\t};\n\n\tconst handleResetPasswordSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n\t\tfirebase.auth().sendPasswordResetEmail(loginDataObj.email, actionCodeSettings)\n\t\t.then(() => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: \"A password reset email has been sent.\",\n\t\t\t\tstatus: 200\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: 400\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t});\n\t};\n\n\treturn (\n    <>\n\t\t\t<UserAuthModal\n\t\t\t\tshow={userAuthModalShow}\n\t\t\t\tonHide={() => setUserAuthModalShow(false)} \n\t\t\t/>\n    \t<Header />\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t{(form === true) ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tvalue={loginDataObj.email}\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\tvalue={loginDataObj.password}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\tonClick={(e) => handleLoginSubmit(e)}\n\t\t\t\t\t\t\t\tdisabled={loading || !loginDataObj.email || !loginDataObj.password}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link href=\"signup\" variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link onClick={() => {setForm(false)}} variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t{\"Forgot your password?\"}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t\tReset password\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\tonClick={(e) => handleResetPasswordSubmit(e)}\n\t\t\t\t\t\t\t\tdisabled={loading || !loginDataObj.email}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReset password\n\t\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link onClick={() => {setForm(true)}} variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t{\"Sign in\"}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport default Login;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Matches.js",["145"],"import React, { useContext } from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport { IsEmpty, Map } from \"react-lodash\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Cards from '../components/Cards';\nimport FiltersModal from '../components/Modals/FiltersModal';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\n\nfunction Matches() {\n  const { appMatchesOnLoad, filterValue } = useContext(DataAreaContext);\n\n  const sortedMatches = appMatchesOnLoad.sort(function(a, b) {\n    return new Date(b.updatedAt) - new Date(a.updatedAt);\n  });\n  \n  return (\n    <>\n    <Container fluid={ true } style={{ padding: '0 0 85px 0' }}>\n      <FiltersModal />\n      <Header />\n      <Container>\n        <Row>\n        <IsEmpty\n          value={sortedMatches}\n          yes={() =>\n            <Spinner animation=\"grow\" variant=\"success\" />\n          }\n          no={() => (\n            <Map collection={sortedMatches}\n              iteratee={match =>\n                (match.competitionName.toLowerCase()).includes(filterValue.toLowerCase())\n                ?\n                (\n                  <Col lg={{ span: 4 }} md={{ span: 12 }} xs={{ span: 12 }}  className='mt-3'>\n                    <Cards match={ match } />\n                  </Col> \n                ) : \n                null\n              }\n            />\n          )}\n        />\n        </Row>\n      </Container>\n      {/* <Footer /> */}\n    </Container>\n    </>\n  );\n}\n\nexport default Matches;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/DataAreaContext.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Header/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Profile.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Settings.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Cards/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Slider/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Match.js",["146","147"],"import React, { useContext, useEffect } from 'react';\nimport API from '../utils/API';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport Lib from '../utils/Lib';\nimport { Map } from \"react-lodash\";\nimport { useParams } from \"react-router-dom\";\nimport { IsEmpty } from \"react-lodash\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport DeleteModal from \"../components/Modals/DeleteModal\";\nimport UpdateModal from \"../components/Modals/UpdateModal\";\nimport { Container, Row, Table, Button, Spinner } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nlet isEmpty = require('lodash.isempty');\n\nfunction Match() {\n  const { match, setMatchObj, userDataObj, isAuthenticated, deleteModalShow, setDeleteModalShow, timeZone, updateModalShow, setUpdateModalShow } = useContext(DataAreaContext);\n  let { id } = useParams();\n  let individualMatches;\n  let sortedIndividualMatches;\n\n  useEffect(() => {\n    if (!isEmpty(match)) return;\n    getMatchOnLoad();\n  }, []);\n\n  async function getMatchOnLoad() {\n    await API.getMatch(id)\n      .then(res => {\n        setMatchObj(res.data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  if (!isEmpty(match)) {\n    individualMatches = match.individualMatch;\n    sortedIndividualMatches = individualMatches.sort(function(a, b) {\n      return a.id - b.id;\n    });\n  }\n\n  return (\n    <IsEmpty\n      value={match}\n      yes={() =>\n        <Container fluid={ true } style={{ padding: '0 0 70px 0' }}>\n          <Header />\n          <Container>\n            <Row>\n              <Spinner animation=\"grow\" variant=\"success\" />\n            </Row>\n          </Container>\n        </Container>\n      }\n      no={() => (\n        <>\n        <DeleteModal\n          show={deleteModalShow}\n          onHide={() => setDeleteModalShow(false)} \n        />\n        <UpdateModal\n          show={updateModalShow}\n          onHide={() => setUpdateModalShow(false)} \n        />\n        <Container fluid={ true } style={{ padding: '0 0 70px 0' }}>\n          <Header />\n          <Container>\n            <Row>\n              <Table striped bordered hover variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Tee Time</th>\n                    <th>Competition</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <Moment tz={ timeZone } format=\"DD/MM/YYYY\">\n                        { match.matchDateTime }\n                      </Moment>\n                    </td>\n                    <td>\n                      <Moment tz={ timeZone } format=\"HH:mm z\">\n                        { match.matchDateTime }\n                      </Moment>\n                    </td>\n                    <td>{ Lib.capitalize(match.competitionName) }</td>\n                    <td>{ Lib.capitalize(match.matchStatus) }</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Row>\n            <Row>\n              <Table striped bordered hover variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th>{ Lib.capitalize(match.teamOneName) } (H)</th>\n                    <th>{ Lib.capitalize(match.teamTwoName) } (A)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{ match.teamOneScore }</td>\n                    <td>{ match.teamTwoScore }</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Row>\n            <Row>\n              <Table striped bordered hover variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th>Individual Match Scores</th>\n                  </tr>\n                </thead>\n              </Table>\n            </Row>\n            <Row>\n              <Table striped bordered hover variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th>{ Lib.capitalize(match.teamOneName) }</th>\n                    <th>Thru</th>\n                    <th>{ Lib.capitalize(match.teamTwoName) }</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <Map collection={sortedIndividualMatches}\n                    iteratee={singleMatch =>\n                      <tr>\n                        <td>{ singleMatch.id }</td>\n                        <td>{ singleMatch.teamOneScore }</td>\n                        <td>{ singleMatch.holesPlayed }</td>\n                        <td>{ singleMatch.teamTwoScore }</td>\n                      </tr>\n                    }\n                  />\n                </tbody>\n              </Table>\n            </Row>\n            <Row>\n              <Table striped bordered hover variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th>\n                      Last updated at:\n                      <Moment tz={ timeZone } format=\"DD/MM/YYYY HH:mm z\">\n                        { match.updatedAt }\n                      </Moment>\n                      </th>\n                  </tr>\n                </thead>\n              </Table>\n            </Row>\n            {(isAuthenticated) && (match.createdByUid === userDataObj.uid) ? (\n              <>\n                <Row>\n                  <Button\n                    variant=\"outline-success\"\n                    size=\"sm\"\n                    className=\"float-left\"\n                    onClick={() =>\n                      setUpdateModalShow(true)\n                    }\n                  >\n                    Update\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    size=\"sm\"\n                    className=\"float-right\"\n                    onClick={() =>\n\t\t\t                setDeleteModalShow(true)\n                    }\n                  >\n                    Delete\n                  </Button>\n                </Row>\n              </>\n            ) : (\n              null\n            )\n            }\n          </Container>\n          {/* <Footer /> */}\n        </Container>\n        </>\n      )}\n    />\n  )\n}\n\nexport default Match;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Footer/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/userMatches.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/UserMatches.js",["148"],"import React, { useContext } from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport { IsEmpty, Map } from \"react-lodash\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Cards from '../components/Cards';\nimport FiltersModal from '../components/Modals/FiltersModal';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction Matches() {\n  const { appMatchesOnLoad, filterValue, show, userDataObj } = useContext(DataAreaContext);\n  let filterMatchesByUid;\n\n  if (Object.keys(userDataObj).length > 0) {\n    filterMatchesByUid = appMatchesOnLoad.filter(match => match.createdByUid === userDataObj.uid)\n  } else {\n    filterMatchesByUid = []\n  }\n\n  const sortedMatches = filterMatchesByUid.sort(function(a, b) {\n    return new Date(b.updatedAt) - new Date(a.updatedAt);\n  });\n  \n  return (\n    <>\n    <Container fluid={ true } style={{ padding: '0 0 85px 0' }}>\n      <Header />\n      <Container>\n        <Row \n          className={(show) ? 'mt-3 mx-0' : ''}\n          style={{ backgroundColor: '#ffffff', boxShadow: '0 0 4px rgba(0,0,0,.1)', borderRadius: '.25rem' }}>\n          <FiltersModal />\n        </Row>\n        <Row>\n        <IsEmpty\n          value={sortedMatches}\n          yes={() =>\n            <div>\n              <p>\n                You have not matches created 🤨\n              </p>\n            </div>\n          }\n          no={() => (\n            <Map collection={sortedMatches}\n              iteratee={match =>\n                (match.competitionName.toLowerCase()).includes(filterValue.toLowerCase())\n                ?\n                (\n                  <Col lg={{ span: 4 }} md={{ span: 12 }} xs={{ span: 12 }}  className='mt-3'>\n                    <Cards match={ match } />\n                  </Col> \n                ) : \n                null\n              }\n            />\n          )}\n        />\n        </Row>\n      </Container>\n      {/* <Footer /> */}\n    </Container>\n    </>\n  );\n}\n\nexport default Matches;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/CreateMatch.js",["149"],"import React from 'react';\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport PostMatchForm from '../components/PostMatchForm';\nimport { Container } from 'react-bootstrap';\n\nfunction Home() {\n\n  return (\n    <>\n    <Header />\n    <Container>\n      <PostMatchForm />\n    </Container>\n    {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default Home;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/Lib.js",["150"],"export default {\n  // Logs in a user\n  capitalize: function(str) {\n    return [...str].reduce(\n      (s, c, i, a) => s + (i === 0 || a[i - 1] === ' ' ? c.toUpperCase() : c),\n      ''\n    )\n  },\n  removeByAttr: function(arr, attr, value){\n    var i = arr.length;\n    while(i--){\n       if( arr[i] \n           && arr[i].hasOwnProperty(attr) \n           && (arguments.length > 2 && arr[i][attr] === value ) ){ \n           arr.splice(i,1);\n       }\n    }\n    return arr;\n  }\n}\n","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Signup.js",["151","152","153"],"import React, { useContext, useState } from 'react';\nimport API from \"../utils/API\";\nimport DataAreaContext from '../utils/DataAreaContext';\nimport UserAuthModal from \"../components/Modals/UserAuthModal\";\nimport Header from \"../components/Header\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst styles = makeStyles({\n\tpaper: {\n\t\tmarginTop: 8,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmargin: 1,\n\t\tbackgroundColor: 'grey'\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: 1\n\t},\n\tsubmit: {\n\t\tmargin: 3\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogess: {\n\t\tposition: 'absolute'\n\t}\n});\n\t\nconst inputFieldValues = [\n\t{\n\t\tname: \"firstName\",\n\t\tlabel: \"First Name\",\n\t\tid: \"firstName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\"\n\t},\n\t{\n\t\tname: \"lastName\",\n\t\tlabel: \"Last Name\",\n\t\tid: \"lastName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\"\n\t},\n\t{\n\t\tname: \"email\",\n\t\tlabel: \"Email address\",\n\t\tid: \"email\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\"\n\t},\n\t{\n\t\tname: \"password\",\n\t\tlabel: \"Password\",\n\t\tid: \"password\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"password\"\n\t},\n\t{\n\t\tname: \"confirmPassword\",\n\t\tlabel: \"Confirm Password\",\n\t\tid: \"confirmPassword\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"password\"\n\t},\n];\n\nfunction Signup() {\n\tconst { signUpObj, setSignUpObj, setUserDataObj, setUserAuthResponse, userAuthModalShow, setUserAuthModalShow } = useContext(DataAreaContext);\n  const [errors, setErrors] = useState({});\n\tconst [loading, setLoading] = useState( false );\n\tconst classes = styles();\n\n  // Handles updating component state when the user types into the input field\n  const handleInputChange = (event) => {\n\t\tevent.preventDefault();\n    const { name, value } = event.target;\n\t\tsetSignUpObj({...signUpObj, [name]: value});\n    validate(name, value);\n  };\n\n  const validate = (name, value) => {\n    let temp = { ...errors };\n\t\t\n\t\tswitch (name) {\n\t\t\tcase 'email':\n\t\t\t\tconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\t\t\ttemp.email = value.match(emailRegEx) ? \"\" : \"Email is not valid.\"\n\t\t\t\tbreak;\n\t\t\tcase 'password':\n\t\t\t\tif (\"confirmPassword\" in signUpObj) {\n\t\t\t\t\ttemp[name] = signUpObj.confirmPassword !== value ? \"Passwords much match.\" : \"\";\n\t\t\t\t\ttemp[\"confirmPassword\"] = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'confirmPassword':\n\t\t\t\tif (\"password\" in signUpObj) {\n\t\t\t\t\ttemp[name] = signUpObj.password !== value ? \"Passwords much match.\" : \"\";\n\t\t\t\t\ttemp[\"password\"] = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttemp[name] = !isNullOrEmpty(value) ? \"\" : \"This field is required.\";\n\t\t}\n\n    setErrors({\n      ...temp\n    });\n  };\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n\n\t\tconst actionCodeSettings = {\n\t\t\turl: 'https://inter-club-golf-live.web.app/login',\n\t\t\thandleCodeInApp: false\n\t\t};\n\n    firebase\n    .auth()\n    .createUserWithEmailAndPassword(\n      signUpObj.email, \n      signUpObj.password\n    )\n\t\t.then((response) => {\n\t\t\tconsole.log(response);\n\t\t\tresponse.user.sendEmailVerification(actionCodeSettings);\n\t\t\tresponse.user.updateProfile({\n\t\t\t\tdisplayName: `${signUpObj.firstName} ${signUpObj.lastName}`\n\t\t\t});\n\t\t\tsetUserDataObj(response.user);\n\t\t\tfirebase.auth().signOut();\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: \"You're signup has been received. We've sent you an email verification. Please verify your email through the email you received to be able to complete the signup process.\",\n\t\t\t\tstatus: 200\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t})\n\t\t.catch(error => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: 400\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t});\n\t};\n\n\tconst formIsValid = () => {\n\t\tconst isValid =\n\t\t\tsignUpObj.firstName &&\n\t\t\tsignUpObj.lastName &&\n\t\t\tsignUpObj.email &&\n\t\t\tsignUpObj.password &&\n\t\t\tsignUpObj.confirmPassword &&\n\t\t\tObject.values(errors).every((x) => x === \"\");\n\n\t\treturn isValid;\n\t};\n\n\tfunction isNullOrEmpty(v) {\n\t\treturn typeof v === 'undefined' || v === null || v.length === 0;\n\t}\n\n  return (\n    <>\n\t\t\t<UserAuthModal\n\t\t\t\tshow={userAuthModalShow}\n\t\t\t\tonHide={() => setUserAuthModalShow(false)} \n\t\t\t/>\n    \t<Header />\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\tCreate account\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t{inputFieldValues.map((inputFieldValue, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\trequired={inputFieldValue.required}\n\t\t\t\t\t\t\t\t\tfullWidth={inputFieldValue.fullWidth}\n\t\t\t\t\t\t\t\t\tid={inputFieldValue.id}\n\t\t\t\t\t\t\t\t\tlabel={inputFieldValue.label}\n\t\t\t\t\t\t\t\t\tname={inputFieldValue.name}\n\t\t\t\t\t\t\t\t\ttype={inputFieldValue.type}\n\t\t\t\t\t\t\t\t\terror={errors[inputFieldValue.name]}\n\t\t\t\t\t\t\t\t\tautoComplete={inputFieldValue.autoComplete}\n\t\t\t\t\t\t\t\t\tautoFocus={inputFieldValue.autoFocus}\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t{...(errors[inputFieldValue.name] && {\n\t\t\t\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\t\t\t\thelperText: errors[inputFieldValue.name]\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tdisabled={loading || !formIsValid()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Link href=\"login\" variant=\"body2\">\n\t\t\t\t\t\t\t\t\t{\"Already have an account? Sign in\"}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</>\n  )\n}\n\nexport default Signup;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/PostMatchForm/index.js",["154"],"import React, { useContext, useState } from 'react';\nimport API from \"../../utils/API\";\nimport Lib from \"../../utils/Lib\";\nimport DataAreaContext from '../../utils/DataAreaContext';\nimport CreateMatchModal from '../Modals/CreateMatchModal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport competition from '../../assets/competitions.json';\n\nconst styles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: 8,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmargin: 1,\n\t\tbackgroundColor: 'grey'\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: 1\n\t},\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n\tsubmit: {\n\t\tmargin: 3\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogress: {\n\t\tposition: 'absolute'\n\t}\n}));\n\nconst rounds = [\n  {\n    round: '1'\n  },\n  {\n    round: '2'\n  },\n  {\n    round: '3'\n  },\n  {\n    round: '4'\n  },\n  {\n    round: '5'\n  },\n  {\n    round: '6'\n  },\n  {\n    round: 'last 32'\n  },\n  {\n    round: 'last 16'\n  },\n  {\n    round: 'quarter finals'\n  },\n  {\n    round: 'semi finals'\n  },\n  {\n    round: 'final'\n  },\n];\n\nconst regions = [\n  {\n    region: 'leinster'\n  },\n  {\n    region: 'ulster'\n  },\n  {\n    region: 'munster'\n  },\n  {\n    region: 'connacht'\n  },\n  {\n    region: 'all ireland'\n  }\n];\n\nconst inputFieldValues = [\n\t{\n\t\tname: \"matchDate\",\n\t\tlabel: \"\",\n\t\tid: \"matchDate\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"date\",\n\t\tselect: false,\n\t\thelperText: \"Choose the match date\"\n\t},\n\t{\n\t\tname: \"matchTime\",\n\t\tlabel: \"\",\n\t\tid: \"matchTime\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"time\",\n\t\tselect: false,\n\t\thelperText: \"Choose the match time\"\n\t},\n\t{\n\t\tname: \"competitionName\",\n\t\tlabel: \"\",\n\t\tid: \"competitionName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tselect: true,\n\t\thelperText: \"Choose the name of the competition\"\n\t},\n\t{\n\t\tname: \"competitionRegion\",\n\t\tlabel: \"\",\n\t\tid: \"competitionRegion\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tselect: true,\n\t\thelperText: \"Choose the region the competition is located\"\n\t},\n\t{\n\t\tname: \"competitionRound\",\n\t\tlabel: \"\",\n\t\tid: \"competitionRound\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tselect: true,\n\t\thelperText: \"Choose the round of the competition\"\n\t},\n\t{\n\t\tname: \"numIndividualMatches\",\n\t\tlabel: \"\",\n\t\tid: \"numIndividualMatches\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"number\",\n\t\tselect: false,\n\t\thelperText: \"Choose the number of individual matches\"\n\t},\n\t{\n\t\tname: \"teamOneName\",\n\t\tlabel: \"\",\n\t\tid: \"teamOneName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tselect: false,\n\t\thelperText: \"Choose the home team name\"\n\t},\n\t{\n\t\tname: \"teamTwoName\",\n\t\tlabel: \"\",\n\t\tid: \"teamTwoName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tselect: false,\n\t\thelperText: \"Choose the away team name\"\n\t},\n];\n\nfunction PostMatch() {\n\tconst { appMatchesOnLoad, postMatchObj, setPostMatchObj, userDataObj, setAppMatchesOnLoad, timeZone, createMathModalShow, setCreateMatchModalShow, setCreateMatchResponse } = useContext(DataAreaContext);\n  const [errors, setErrors] = useState({});\n\tconst classes = styles();\n\tconst [loading, setLoading] = useState( false );\n\n  // Handles updating component state when the user types into the input field\n  const handleInputChange = (event) => {\n\t\tevent.preventDefault();\n    const { name, value } = event.target;\n\t\tsetPostMatchObj({...postMatchObj, [name]: value})\n  };\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n    API.postMatch({\n\t\t\ttimeZone: timeZone,\n      matchDateTime: moment(`${postMatchObj.matchDate} ${postMatchObj.matchTime}`).format(),\n      createdAt: moment().format(),\n      updatedAt: moment().format(),\n      competitionName: postMatchObj.competitionName,\n      competitionRegion: postMatchObj.competitionRegion,\n      competitionRound: postMatchObj.competitionRound,\n      numIndividualMatches: parseInt(postMatchObj.numIndividualMatches),\n      teamOneName: postMatchObj.teamOneName,\n      teamTwoName: postMatchObj.teamTwoName,\n\t\t\tuid: userDataObj.uid\n\t\t})\n\t\t.then((response) => {\n\t\t\tsetAppMatchesOnLoad([response.data, ...appMatchesOnLoad]);\n\t\t\tsetCreateMatchResponse({\n\t\t\t\tmatchId: response.data.matchId,\n\t\t\t\tmessage: \"Match created successfully\",\n\t\t\t\tstatus: 200\n\t\t\t});\n\t\t\tsetCreateMatchModalShow(true);\n      setLoading(false);\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error);\n\t\t\tsetCreateMatchResponse({\n\t\t\t\tmessage: error.response.data.error,\n\t\t\t\tstatus: error.response.status\n\t\t\t});\n\t\t\tsetCreateMatchModalShow(true);\n\t\t\tsetLoading(false);\n\t\t});\n\t};\n\n\tconst formIsValid = () => {\n\t\tconst isValid =\n\t\t\tpostMatchObj.matchDate &&\n\t\t\tpostMatchObj.matchTime &&\n\t\t\tpostMatchObj.competitionName &&\n\t\t\tpostMatchObj.competitionRegion &&\n\t\t\tpostMatchObj.competitionRound &&\n\t\t\tpostMatchObj.numIndividualMatches &&\n\t\t\tpostMatchObj.teamOneName &&\n\t\t\tpostMatchObj.teamTwoName &&\n\t\t\tObject.values(errors).every((x) => x === \"\");\n\n\t\treturn isValid;\n\t};\n\n\treturn (\n\t\t<>\n\t\t<CreateMatchModal\n\t\t\tshow={createMathModalShow}\n\t\t\tonHide={() => setCreateMatchModalShow(false)} \n\t\t/>\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tCreate Match\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t{inputFieldValues.map((inputFieldValue, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired={inputFieldValue.required}\n\t\t\t\t\t\t\t\tfullWidth={inputFieldValue.fullWidth}\n\t\t\t\t\t\t\t\tid={inputFieldValue.id}\n\t\t\t\t\t\t\t\tlabel={inputFieldValue.label}\n\t\t\t\t\t\t\t\tname={inputFieldValue.name}\n\t\t\t\t\t\t\t\ttype={inputFieldValue.type}\n\t\t\t\t\t\t\t\tselect={inputFieldValue.select}\n\t\t\t\t\t\t\t\terror={errors[inputFieldValue.name]}\n\t\t\t\t\t\t\t\tautoComplete={inputFieldValue.autoComplete}\n\t\t\t\t\t\t\t\tautoFocus={inputFieldValue.autoFocus}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\thelperText={inputFieldValue.helperText}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{inputFieldValue.id === 'competitionName' ? \n\t\t\t\t\t\t\t\t\tcompetition.map((competition, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={competition.name}>\n\t\t\t\t\t\t\t\t\t\t\t{competition.name}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{inputFieldValue.id === 'competitionRegion' ? \n\t\t\t\t\t\t\t\t\tregions.map((region, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={region.region}>\n\t\t\t\t\t\t\t\t\t\t\t{Lib.capitalize(region.region)}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{inputFieldValue.id === 'competitionRound' ? \n\t\t\t\t\t\t\t\t\trounds.map((round, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={round.round}>\n\t\t\t\t\t\t\t\t\t\t\t{Lib.capitalize(round.round)}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\tdisabled={loading || !formIsValid()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progress} />}\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport default PostMatch;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UpdateModal/index.js",["155"],"import React, { useContext, useEffect, useState } from 'react';\nimport DataAreaContext from '../../../utils/DataAreaContext';\nimport Lib from '../../../utils/Lib';\nimport API from '../../../utils/API';\nimport { Button, Modal, Form, Col, Spinner } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { Map } from \"react-lodash\";\nimport moment from 'moment';\nimport 'moment-timezone';\n\nfunction UpdateModal(props) {\n  const { setUpdateModalShow, setMatchObj, match, setUpdateResponse, updateResponse, updateMatchObj, setUpdateMatchObj, appMatchesOnLoad } = useContext(DataAreaContext);\n\tlet history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setUpdateMatchObj({...match});\n  }, []);\n\n  // Handles updating component state when the user types into the input field\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const { id, name, value } = event.target;\n\n    for (let object of updateMatchObj.individualMatch) {\n      if (parseInt(id) === object.id) {\n        for (const key in object) {\n          if (key === name) {\n            object[key] = value;\n            updateMatchObj.updatedAt = moment().format();\n          }\n        }\n        return;\n      }\n    }\n  };\n\n  const updateOverallMatchScore = (object) => {\n    let array = object.individualMatch;\n    let teamOneOverallScore = 0;\n    let teamTwoOverallScore = 0;\n    for (const i of array) {\n      if (i.teamOneScore === i.teamTwoScore) {\n        teamOneOverallScore += 0.5;\n        teamTwoOverallScore += 0.5;\n      } else if (i.teamOneScore < i.teamTwoScore) {\n        teamTwoOverallScore += 1;\n      } else if (i.teamOneScore > i.teamTwoScore) {\n        teamOneOverallScore += 1;\n      }\n    }\n    return {\n      teamOneScore: teamOneOverallScore,\n      teamTwoScore: teamTwoOverallScore\n    }\n  }\n\n  const handleUpdateClick = (event) => {\n    event.preventDefault();\n    setLoading(true);\n    const updatedOverallMatchScore = updateOverallMatchScore(updateMatchObj);\n    updateMatchObj.teamOneScore = updatedOverallMatchScore.teamOneScore;\n    updateMatchObj.teamTwoScore = updatedOverallMatchScore.teamTwoScore;\n    API.updateMatch({\n      matchId: updateMatchObj.matchId,\n      individualMatch: updateMatchObj.individualMatch,\n      updatedAt: moment().format()\n    })\n    .then((response) => {\n      setUpdateResponse({\n        message: response.data.message,\n        status: response.status\n      });\n      setMatchObj({...updateMatchObj});\n      for (let i = 0; i < appMatchesOnLoad.length; i++) {\n        if(appMatchesOnLoad[i].matchId === updateMatchObj.matchId) {\n          appMatchesOnLoad[i] = updateMatchObj;\n        }\n      }\n      setLoading(false);\n    })\n    .catch(() => {\n      setUpdateResponse({\n        message: \"Something went wrong. Try again.\",\n        status: 500\n      });\n    });\n  };\n\n  function handleCloseClick(matchId) {\n    setUpdateModalShow(false);\n    setUpdateResponse({});\n    history.push(`/match/${matchId}`);\n  }\n\n  return (\n    <>\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"true\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Update Modal\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {updateResponse.status === 200 || updateResponse.status === 500 ? (\n          `${ updateResponse.message }`\n        ) : (\n          <Form>\n            <Form.Row>\n              <Col>\n                <Form.Label>\n                  Home Team: { Lib.capitalize(match.teamOneName) }\n                </Form.Label>\n                <br/>\n                <Form.Label>\n                  Away Team: { Lib.capitalize(match.teamTwoName) }\n                </Form.Label>\n                <br/>\n                <Form.Label>\n                  Competition: { Lib.capitalize(match.competitionName) }\n                </Form.Label>\n                <br/>\n                <Map collection={match.individualMatch}\n                  iteratee={singleMatch =>\n                    <>\n                    <br/>\n                    <Form.Label>Match #{ singleMatch.id }</Form.Label>\n                    <br/>\n                    <Form.Label># of holes played</Form.Label>\n                    <Form.Control\n                      id={ singleMatch.id }\n                      defaultValue={ singleMatch.holesPlayed }\n                      name=\"holesPlayed\"\n                      onChange={handleInputChange}\n                    />\n                    <Form.Label>\n                      { Lib.capitalize(singleMatch.teamOneName) } Score\n                    </Form.Label>\n                    <Form.Control \n                      id={ singleMatch.id }\n                      defaultValue={ singleMatch.teamOneScore }\n                      name=\"teamOneScore\"\n                      onChange={handleInputChange}\n                    />\n                    <Form.Label>\n                      { Lib.capitalize(singleMatch.teamTwoName) } Score\n                    </Form.Label>\n                    <Form.Control \n                      id={ singleMatch.id }\n                      defaultValue={ singleMatch.teamTwoScore }\n                      name=\"teamTwoScore\"\n                      onChange={handleInputChange}\n                    />\n                    </>\n                  }\n                />\n                {/* <Form.Label>Match Date</Form.Label>\n                <TextField\n                  disabled\n                  defaultValue={ match.matchDateTime }\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"matchDate\"\n                  name=\"matchDate\"\n                  type=\"date\"\n                  autoFocus\n                  onChange={handleInputChange}\n                />\n                <Form.Label>Match Time</Form.Label>\n                <TextField\n                  disabled\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"matchTime\"\n                  id=\"matchTime\"\n                  type=\"time\"\n                  autoFocus\n                  onChange={handleInputChange}\n                /> */}\n              </Col>\n            </Form.Row>\n          </Form>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        {updateResponse.status === 200 || updateResponse.status === 500 ?\n          <Button \n          onClick={ () => handleCloseClick(match.matchId) }\n          variant=\"outline-success\"\n          >\n            Close\n          </Button>\n          :\n          <Button\n          onClick={ (e) => handleUpdateClick(e) }\n          variant=\"outline-success\"\n          >\n          {isLoading ?\n            <Spinner animation=\"border\" variant=\"light\" /> \n          :\n            'Update'\n          }\n          </Button>\n        }\n      </Modal.Footer>\n    </Modal>\n    </>\n  );\n}\n\nexport default UpdateModal;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/DeleteModal/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/FiltersModal/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/CreateMatchModal/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/LocalStorage/LocalStorage.service.js",["156"],"export default {\n  get: function(key) {\n    return localStorage.getItem(key);\n  },\n  set: function (key, value) {\n    return localStorage.setItem(key, value);\n  },\n  remove: function(key) {\n    return localStorage.removeItem(key);\n  },\n  clear: function() {\n    return localStorage.clear();\n  }\n}","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/SessionStorage/SessionStorage.service.js",["157"],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/BurgerMenuIcon/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/SideBar/index.js",["158"],"import React, { useContext, useState } from 'react';\nimport Burger from '../BurgerMenuIcon';\nimport styled from 'styled-components';\nimport DataAreaContext from '../../utils/DataAreaContext';\nimport LocalStorage from '../../services/LocalStorage/LocalStorage.service';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faGolfBall, faSignInAlt, faUserPlus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst StyledMenu = styled.nav`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  // justify-content: center;\n  background: #f3f2ef;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  height: 100vh;\n  text-align: left;\n  padding: 2rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n\n  @media (max-width: 576px) {\n      width: 100%;\n    }\n\n  a {\n    font-size: 1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.5rem;\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 1.25rem;\n      text-align: left;\n    }\n  }\n`\n\nfunction SideBar() {\n  const { isAuthenticated, setFilterValue, userDataObj, setUserDataObj, setIsAuthenticated, sidebarOpen, setSidebarOpen } = useContext(DataAreaContext);\n  const location = useLocation();\n\tconst [errors, setErrors] = useState( [] );\n\n  const onClickSignOutUser = (e) => {\n\t\te.preventDefault();\n    firebase.auth().signOut()\n\t\t.then((response) => {\n\t\t\tLocalStorage.remove('AuthToken');\n\t\t\tsetUserDataObj({});\n      setSidebarOpen(false);\n\t\t\tsetIsAuthenticated(false);\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetErrors(error.response);\n\t\t});\n  }\n\n  const onClick = () => {\n    setFilterValue(\"\");\n    setSidebarOpen(false);\n  }\n\n  return (\n    <>\n    <StyledMenu open={sidebarOpen}>\n      <Burger open={sidebarOpen} setOpen={setSidebarOpen} />\n      <Nav justify className=\"mb-0 flex-column\" activeKey={location.pathname}>\n        <Nav.Item className=\"mx-0\">\n          <Nav.Link className='px-0 py-4' as={ Link } to=\"/\" eventKey=\"/\" onClick={() => onClick()}>\n            <FontAwesomeIcon icon={ faHome } className='fa-lg'/>\n            <span className='mb-0'> Home</span>\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"mx-0\">\n          <Nav.Link className='px-0 py-4' as={ Link } to=\"/matches\" eventKey=\"/matches\" onClick={() => onClick()}>\n            <FontAwesomeIcon icon={ faGolfBall } className='fa-lg'/>\n            <span className='mb-0'> Matches</span>\n          </Nav.Link>\n        </Nav.Item>\n        {!isAuthenticated ? (\n          <>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4' as={ Link } to=\"/login\" eventKey=\"/login\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faSignInAlt } className='fa-lg'/>\n              <span className='mb-0'> Login</span>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to=\"/signup\" eventKey=\"/signup\" id=\"sign-up\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faUserPlus } className='fa-lg'/>\n              <span className='mb-0'> Signup</span>\n            </Nav.Link>\n          </Nav.Item>\n          </>\n        ) : (\n          <>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to={ \"/usermatches/\" + userDataObj.uid } eventKey={ \"/usermatches/\" + userDataObj.uid } id=\"usermatches\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faGolfBall } className='fa-lg'/>\n              <span className='mb-0'> My matches</span>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to=\"/creatematch\" eventKey=\"/creatematch\" id=\"creatematch\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faPlus } className='fa-lg'/>\n              <span className='mb-0'> Create match</span>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to=\"/login\" eventKey=\"/login\" onClick={(e) => onClickSignOutUser(e)}>\n              <FontAwesomeIcon icon={ faSignInAlt } className='fa-lg'/>\n              <span className='mb-0'> Logout</span>\n            </Nav.Link>\n          </Nav.Item>\n          </>\n        )}\n      </Nav>\n    </StyledMenu>\n    </>\n  );\n}\n\nexport default SideBar;",["159","160"],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UserAuthModal/index.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":59,"column":5,"nodeType":"171","endLine":59,"endColumn":22,"suggestions":"172"},{"ruleId":"165","severity":1,"message":"166","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":14},{"ruleId":"169","severity":1,"message":"173","line":26,"column":6,"nodeType":"171","endLine":26,"endColumn":8,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"166","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":1,"column":1,"nodeType":"177","endLine":20,"endColumn":2},{"ruleId":"165","severity":1,"message":"178","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":11},{"ruleId":"179","severity":1,"message":"180","line":118,"column":34,"nodeType":"181","messageId":"182","endLine":118,"endColumn":35,"suggestions":"183"},{"ruleId":"179","severity":1,"message":"180","line":118,"column":59,"nodeType":"181","messageId":"182","endLine":118,"endColumn":60,"suggestions":"184"},{"ruleId":"165","severity":1,"message":"185","line":207,"column":18,"nodeType":"167","messageId":"168","endLine":207,"endColumn":27},{"ruleId":"169","severity":1,"message":"186","line":18,"column":6,"nodeType":"171","endLine":18,"endColumn":8,"suggestions":"187"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":1,"nodeType":"177","endLine":14,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":1,"column":1,"nodeType":"177","endLine":10,"endColumn":2},{"ruleId":"165","severity":1,"message":"188","line":49,"column":9,"nodeType":"167","messageId":"168","endLine":49,"endColumn":15},{"ruleId":"161","replacedBy":"189"},{"ruleId":"163","replacedBy":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'getMatchOnLoad' and 'match'. Either include them or remove the dependency array.",["194"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'API' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["195","196"],["197","198"],"'setErrors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match' and 'setUpdateMatchObj'. Either include them or remove the dependency array.",["199"],"'errors' is assigned a value but never used.",["191"],["192"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"messageId":"204","fix":"205","desc":"206"},{"messageId":"207","fix":"208","desc":"209"},{"messageId":"204","fix":"210","desc":"206"},{"messageId":"207","fix":"211","desc":"209"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"214","text":"215"},"Update the dependencies array to be: [getMatchOnLoad, match]",{"range":"216","text":"217"},"removeEscape",{"range":"218","text":"219"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"220","text":"221"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"222","text":"219"},{"range":"223","text":"221"},"Update the dependencies array to be: [match, setUpdateMatchObj]",{"range":"224","text":"225"},[1788,1805],"[history, isAuthenticated]",[1039,1041],"[getMatchOnLoad, match]",[2750,2751],"",[2750,2750],"\\",[2775,2776],[2775,2775],[751,753],"[match, setUpdateMatchObj]"]