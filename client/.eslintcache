[{"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/index.js":"1","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/App.js":"2","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/reportWebVitals.js":"3","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/PageNotFound.js":"4","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/API.js":"5","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Home.js":"6","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Login.js":"7","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/DataAreaContext.js":"8","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Header/index.js":"9","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Profile.js":"10","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Cards/index.js":"11","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Slider/index.js":"12","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Match.js":"13","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Footer/index.js":"14","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/userMatches.js":"15","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/UserMatches.js":"16","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/CreateMatch.js":"17","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/Lib.js":"18","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Signup.js":"19","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/PostMatchForm/index.js":"20","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UpdateModal/index.js":"21","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/DeleteModal/index.js":"22","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/CreateMatchModal/index.js":"23","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/LocalStorage/LocalStorage.service.js":"24","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/SessionStorage/SessionStorage.service.js":"25","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/BurgerMenuIcon/index.js":"26","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/SideBar/index.js":"27","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UserAuthModal/index.js":"28","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/UpdateMatchForm/index.js":"29","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Carousel/index.js":"30","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Competitions.js":"31","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/ComboBox/index.js":"32","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Wrapper/index.js":"33","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/FiltersOffCanvas/index.js":"34","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/About.js":"35"},{"size":1166,"mtime":1627515332201,"results":"36","hashOfConfig":"37"},{"size":7173,"mtime":1633070716014,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1618193579027,"results":"39","hashOfConfig":"37"},{"size":349,"mtime":1620866088424,"results":"40","hashOfConfig":"37"},{"size":1504,"mtime":1627462780101,"results":"41","hashOfConfig":"37"},{"size":1995,"mtime":1628499582257,"results":"42","hashOfConfig":"37"},{"size":6560,"mtime":1626166926740,"results":"43","hashOfConfig":"37"},{"size":111,"mtime":1618193579028,"results":"44","hashOfConfig":"37"},{"size":1887,"mtime":1627595810589,"results":"45","hashOfConfig":"37"},{"size":332,"mtime":1620866354159,"results":"46","hashOfConfig":"37"},{"size":4004,"mtime":1628499832020,"results":"47","hashOfConfig":"37"},{"size":734,"mtime":1625110057940,"results":"48","hashOfConfig":"49"},{"size":11432,"mtime":1633069357803,"results":"50","hashOfConfig":"37"},{"size":2788,"mtime":1628495002028,"results":"51","hashOfConfig":"37"},{"size":1675,"mtime":1623281462014,"results":"52","hashOfConfig":"49"},{"size":2373,"mtime":1627596062847,"results":"53","hashOfConfig":"37"},{"size":376,"mtime":1628495550849,"results":"54","hashOfConfig":"37"},{"size":858,"mtime":1631528906935,"results":"55","hashOfConfig":"37"},{"size":6546,"mtime":1628495575358,"results":"56","hashOfConfig":"37"},{"size":17755,"mtime":1633239493353,"results":"57","hashOfConfig":"37"},{"size":4464,"mtime":1633042323450,"results":"58","hashOfConfig":"37"},{"size":2294,"mtime":1627295907066,"results":"59","hashOfConfig":"37"},{"size":1344,"mtime":1626515627783,"results":"60","hashOfConfig":"37"},{"size":296,"mtime":1625565531356,"results":"61","hashOfConfig":"37"},{"size":218,"mtime":1625564997041,"results":"62","hashOfConfig":"37"},{"size":1332,"mtime":1627101128354,"results":"63","hashOfConfig":"37"},{"size":4320,"mtime":1626856946669,"results":"64","hashOfConfig":"37"},{"size":1138,"mtime":1625955503973,"results":"65","hashOfConfig":"37"},{"size":20595,"mtime":1633244503143,"results":"66","hashOfConfig":"37"},{"size":555,"mtime":1627454221726,"results":"67","hashOfConfig":"37"},{"size":7415,"mtime":1633069374567,"results":"68","hashOfConfig":"37"},{"size":1333,"mtime":1627624326399,"results":"69","hashOfConfig":"37"},{"size":194,"mtime":1627197585730,"results":"70","hashOfConfig":"37"},{"size":2436,"mtime":1627462766303,"results":"71","hashOfConfig":"37"},{"size":1791,"mtime":1627622526880,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"16h9qtu",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"62tzuo",{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"75"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/index.js",[],["157","158"],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/App.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/reportWebVitals.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/PageNotFound.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/API.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Home.js",["159"],"import React, { useContext } from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Carousel from '../components/Carousel';\nimport ComboBox from '../components/ComboBox';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport { IsEmpty } from \"react-lodash\";\nimport AdSense from 'react-adsense';\n\nfunction Home() {\n  const { appMatchesOnLoad } = useContext(DataAreaContext);\n  const RowStyles = {\n      // height: \"100vh\",\n      margin: 0\n  };\n\n  return (\n    <>\n    <Header />\n    <Container className=\"px-0\" style={{ height: \"85vh\"}}>\n      <Row style={ RowStyles }>\n        <Col className=\"mt-4 px-0\" xs={{ span: 12 }}>\n          <p className=\"mx-3 mx-sm-0\" style={{ fontSize: \"2rem\", fontWeight: \"900\" }}>\n            Support your\n            <br />\n            club on the\n            <br />\n            inter club\n            <br />\n            stage\n          </p>\n          <p className=\"mx-3 mx-sm-0\" style={{ fontSize: \"1rem\" }}>\n            Know your clubs upcoming, in progress &amp; completed inter club matches across various golf tournaments.\n          </p>\n          <br />\n          <div className=\"mx-3 mx-sm-0\">\n            <ComboBox />\n          </div>\n        </Col>\n      </Row>\n    </Container>\n    {/* <Row className=\"ads-row mx-3\">\n      <AdSense.Google\n        client={process.env.REACT_APP_GOOGLE_ADSENSE}\n        slot='4238602370'\n        style={{ display: 'block' }}\n        format='auto'\n        responsive='true'\n        layoutKey='-gw-1+2a-9x+5c'\n      />\n    </Row> */}\n    <IsEmpty\n      value={appMatchesOnLoad}\n      yes={() =>\n        <>\n        <Row style={{ justifyContent: \"center\" }}>\n          <Spinner animation=\"grow\" style={{ color: \"#0a66c2\" }} />\n        </Row>\n        <br />\n        </>\n      }\n      no={() => (\n        <Carousel className='mt-3 pb-4'/>\n      )}\n    />\n    <Footer />\n    </>\n  );\n}\n\nexport default Home;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Login.js",["160"],"import React, { useContext, useState, useEffect } from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport LocalStorage from '../services/LocalStorage/LocalStorage.service';\nimport UserAuthModal from \"../components/Modals/UserAuthModal\";\nimport Header from \"../components/Header\";\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst styles = makeStyles({\n\tpaper: {\n\t\tmarginTop: 8,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmargin: 1,\n\t\tbackgroundColor: 'grey'\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: 1\n\t},\n\tsubmit: {\n\t\tmargin: 3\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogess: {\n\t\tposition: 'absolute'\n\t}\n});\n\nfunction Login() {\n\tlet history = useHistory();\n\tconst { isAuthenticated, setIsAuthenticated, loginDataObj, setLoginDataObj, setUserDataObj, setUserAuthResponse, setUserAuthModalShow, userAuthModalShow, form, setForm } = useContext(DataAreaContext);\n\tconst [loading, setLoading] = useState( false );\n\tconst classes = styles();\n\t\n\t// useEffect is listening on load of page\n  // If isAuthenticated changes to true, the user is navigated to the home page \n  useEffect(() => {\n    if(isAuthenticated) {\n      history.push('/');\n    };\n\t}, [isAuthenticated]);\n\n  // Handles updating component state when the user types into the input field\n  const handleInputChange = (event) => {\n\t\tevent.preventDefault();\n    const { name, value } = event.target;\n\t\tsetLoginDataObj({...loginDataObj, [name]: value})\n  };\n\n\tconst actionCodeSettings = {\n\t\turl: 'https://inter-club-golf-live.web.app/login',\n\t\thandleCodeInApp: false\n\t};\n\n\tconst handleLoginSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n\n\t\tfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n\t\t.then(() => {\n\t\t\treturn firebase.auth().signInWithEmailAndPassword(loginDataObj.email, loginDataObj.password);\n\t\t})\n\t\t.then((response) => {\n      if (response.user.emailVerified) {\n\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\tsetUserDataObj(response.user);\n\t\t\t\tLocalStorage.set('AuthToken', `Bearer ${response.user.Aa}`);\n\t\t\t\tsetLoading(false);\n\t\t\t} else {\n\t\t\t\tresponse.user.sendEmailVerification(actionCodeSettings);\n\t\t\t\tsetUserAuthResponse({\n\t\t\t\t\tmessage: \"Your email is not verified. A verification email has been sent to your email address. Please verify your email to continue to login.\",\n\t\t\t\t\tstatus: 200\n\t\t\t\t});\n\t\t\t\tsetLoginDataObj({});\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetUserAuthModalShow(true);\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: 400\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t});\n\t};\n\n\tconst handleResetPasswordSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n\t\tfirebase.auth().sendPasswordResetEmail(loginDataObj.email, actionCodeSettings)\n\t\t.then(() => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: \"A password reset email has been sent.\",\n\t\t\t\tstatus: 200\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: 400\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t});\n\t};\n\n\treturn (\n    <>\n\t\t\t<UserAuthModal\n\t\t\t\tshow={userAuthModalShow}\n\t\t\t\tonHide={() => setUserAuthModalShow(false)} \n\t\t\t/>\n    \t<Header />\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t{(form === true) ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tvalue={loginDataObj.email}\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\tvalue={loginDataObj.password}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\tonClick={(e) => handleLoginSubmit(e)}\n\t\t\t\t\t\t\t\tdisabled={loading || !loginDataObj.email || !loginDataObj.password}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link href=\"signup\" variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link onClick={() => {setForm(false)}} variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t{\"Forgot your password?\"}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t\tReset password\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\tonClick={(e) => handleResetPasswordSubmit(e)}\n\t\t\t\t\t\t\t\tdisabled={loading || !loginDataObj.email}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReset password\n\t\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link onClick={() => {setForm(true)}} variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t{\"Sign in\"}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport default Login;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/DataAreaContext.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Header/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Profile.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Cards/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Slider/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Match.js",["161"],"import React, { useContext, useEffect } from 'react';\nimport API from '../utils/API';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport Lib from '../utils/Lib';\nimport { Map } from \"react-lodash\";\nimport { useParams } from \"react-router-dom\";\nimport { IsEmpty } from \"react-lodash\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport DeleteModal from \"../components/Modals/DeleteModal\";\nimport UpdateModal from \"../components/Modals/UpdateModal\";\nimport { Container, Row, Table, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nlet isEmpty = require('lodash.isempty');\n\nfunction Match() {\n  const { match, setMatchObj, userDataObj, isAuthenticated, deleteModalShow, setDeleteModalShow, timeZone, updateModalShow, setUpdateModalShow, setUpdateMatchObj } = useContext(DataAreaContext);\n  let { id } = useParams();\n  let individualMatches;\n  let sortedIndividualMatches;\n\n  useEffect(() => {\n    setUpdateMatchObj({...match});\n    if (!isEmpty(match)) return;\n    getMatchOnLoad();\n    setUpdateMatchObj({...match});\n  }, []);\n\n  async function getMatchOnLoad() {\n    await API.getMatch(id)\n      .then(res => {\n        setMatchObj(res.data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  if (!isEmpty(match)) {\n    individualMatches = match.individualMatch;\n    sortedIndividualMatches = individualMatches.sort(function(a, b) {\n      return a.individualMatchId - b.individualMatchId;\n    });\n  }\n\n  const getScore = () => {\n    if (match.teamOneScore > match.teamTwoScore) {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          <span style={{ float: 'left' }}><FontAwesomeIcon icon={ faArrowLeft } className='fa-sm' /></span>{match.teamOneScore} - {match.teamTwoScore}\n        </div>\n      )\n    } else if (match.teamOneScore < match.teamTwoScore) {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          {match.teamOneScore} - {match.teamTwoScore}<span style={{ float: 'right' }}><FontAwesomeIcon icon={ faArrowRight } className='fa-sm' /></span>\n        </div>\n      )\n    } else {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          A/S\n        </div>\n      )\n    }\n  }\n\n  const getIndividualMatchScore = (match) => {\n    if (match.homeMatchScore > match.awayMatchScore) {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          <span style={{ float: 'left' }}><FontAwesomeIcon icon={ faArrowLeft } className='fa-sm' /></span>{match.homeMatchScore} up\n        </div>\n      )\n    } else if (match.homeMatchScore < match.awayMatchScore) {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          {match.awayMatchScore} up<span style={{ float: 'right' }}><FontAwesomeIcon icon={ faArrowRight } className='fa-sm' /></span>\n        </div>\n      )\n    } else {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          A/S\n        </div>\n      )\n    }\n  }\n\n  const getHomePlayerNames = (singleMatch) => {\n    if (match.singlePlayer === true) {\n      return (\n        singleMatch.homeMatchPlayerAName !== \"empty\" ? (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n            {Lib.capitalize(singleMatch.homeMatchPlayerAName)}\n          </p>\n        ) : (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n            {match.teamOneName}\n          </p>\n        )\n      )\n    } else {\n      return (\n        singleMatch.homeMatchPlayerAName !== \"empty\" && singleMatch.homeMatchPlayerBName !== \"empty\" ? (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n          {Lib.capitalize(singleMatch.homeMatchPlayerAName)}\n          <br />\n          {Lib.capitalize(singleMatch.homeMatchPlayerBName)}\n          </p>\n        ) : (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n            {Lib.capitalize(match.teamOneName)}\n          </p>\n        )\n      )\n    }\n  }\n\n  const getAwayPlayerNames = (singleMatch) => {\n    if (match.singlePlayer === true) {\n      return (\n        singleMatch.awayMatchPlayerAName !== \"empty\" ? (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n            {Lib.capitalize(singleMatch.awayMatchPlayerAName)}\n          </p>\n        ) : (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n            {Lib.capitalize(match.teamTwoName)}\n          </p>\n        )\n      )\n    } else {\n      return (\n        singleMatch.awayMatchPlayerAName !== \"empty\" && singleMatch.awayMatchPlayerBName !== \"empty\" ? (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n          {Lib.capitalize(singleMatch.awayMatchPlayerAName)}\n          <br />\n          {Lib.capitalize(singleMatch.awayMatchPlayerBName)}\n          </p>\n        ) : (\n          <p style={{ margin: \"0px\", alignItems: \"center\", fontSize: \"0.8rem\" }}>\n            {Lib.capitalize(match.teamTwoName)}\n          </p>\n        )\n      )\n    }\n  }\n\n  return (\n    <IsEmpty\n      value={match}\n      yes={() =>\n        <Container fluid={ true } style={{ padding: '0 0 70px 0' }}>\n          <Header />\n          <Container>\n            <Row>\n              <div style={{ textAlign: \"center\" }}>\n                <br />\n                <br />\n                <Spinner animation=\"grow\" style={{ color: \"#0a66c2\" }} />\n              </div>\n            </Row>\n          </Container>\n        </Container>\n      }\n      no={() => (\n        <>\n        <DeleteModal\n          show={deleteModalShow}\n          onHide={() => setDeleteModalShow(false)} \n        />\n        <UpdateModal\n          show={updateModalShow}\n          onHide={() => setUpdateModalShow(false)} \n        />\n        <Header />\n        <Container>\n          <Row style={{ marginTop: '10px'}}>\n            <Table size=\"sm\" className=\"caption-top\" style={{ tableLayout: 'fixed' }}>\n              <caption style={{ color: '#0a66c2', fontWeight: '900', textAlign: 'center' }}>Match Score</caption>\n              <tbody>\n                <tr key={match.matchId}>\n                  <td style={{ background: '#ffffff' }}>{Lib.capitalize(match.teamOneName)}</td>\n                  <td style={{ background: '#0a66c2' }}>\n                    {getScore()}\n                  </td>\n                  <td style={{ background: '#ffffff' }}>{Lib.capitalize(match.teamTwoName)}</td>\n                </tr>\n              </tbody>\n            </Table>\n          </Row>\n          <Row>\n            <div style={{ textAlign: 'left' }}>\n              <h6>Competition:&nbsp;<span style={{ color: \"#0a66c2\" }}>{ Lib.capitalize(match.competitionName) }</span></h6>\n              <h6>Competition Round:&nbsp;<span style={{ color: \"#0a66c2\" }}>{ Lib.capitalize(match.competitionRound.round) }</span></h6>\n              <h6>Match Status:&nbsp;<span style={{ color: \"#0a66c2\" }}>{ Lib.capitalize(match.matchStatus) }</span></h6>\n              <h6>\n                Match Date:&nbsp;\n                <span style={{ color: \"#0a66c2\" }}>\n                  <Moment tz={ timeZone } format=\"DD/MM/YYYY\">\n                    { match.matchDateTime }\n                  </Moment>\n                </span>\n              </h6>\n              <h6>\n                Tee Time:&nbsp;\n                <span style={{ color: \"#0a66c2\" }}>\n                  <Moment tz={ timeZone } format=\"HH:mm z\">\n                    { match.matchDateTime }\n                  </Moment>\n                </span>\n              </h6>\n            </div>\n          </Row>\n          <br />\n          <Row>\n            <Table size=\"sm\" className=\"caption-top\" style={{ tableLayout: 'fixed' }}>\n              <caption style={{ color: '#0a66c2', fontWeight: '900', textAlign: 'center' }}>Individual Match Scores</caption>\n              <thead>\n                <tr>\n                  <th>{ Lib.capitalize(match.teamOneName) }</th>\n                  <th>Score</th>\n                  <th>{ Lib.capitalize(match.teamTwoName) }</th>\n                </tr>\n              </thead>\n              <tbody>\n                <Map collection={sortedIndividualMatches}\n                  iteratee={singleMatch =>\n                    <>\n                    <tr>\n                      <td colSpan=\"3\" style={{ background: \"#ffffff\", textAlign: \"left\" }}>\n                        {singleMatch.matchDestination === \"empty\" ?\n                          <>\n                          Match {singleMatch.individualMatchId} destination not provided\n                          </>\n                        :\n                          <>\n                          Match {singleMatch.individualMatchId} contested in&nbsp;\n                          <span style={{ color: \"#0a66c2\", fontWeight: \"500\" }}>\n                            {Lib.capitalize(singleMatch.matchDestination)}\n                          </span>\n                          </>\n                        }\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>{getHomePlayerNames(singleMatch)}</td>\n                      <td style={{ background: '#0a66c2' }}>\n                        {getIndividualMatchScore(singleMatch)}\n                      </td>\n                      <td>{getAwayPlayerNames(singleMatch)}</td>\n                    </tr>\n                    <tr>\n                      <td colSpan=\"3\">Holes played <span style={{ color: \"#0a66c2\", fontWeight: \"500\" }}>{singleMatch.holesPlayed}</span></td>\n                    </tr>\n                    <br />\n                    </>\n                  }\n                />\n              </tbody>\n            </Table>\n          </Row>\n          {(isAuthenticated) && (match.createdByUid === userDataObj.uid) ? (\n            <>\n              <Row className=\"d-grid gap-2\">\n                <Button\n                  variant=\"outline-success\"\n                  size=\"sm\"\n                  className=\"float-left\"\n                  onClick={() =>\n                    setUpdateModalShow(true)\n                  }\n                >\n                  Update\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  size=\"sm\"\n                  className=\"float-right\"\n                  onClick={() =>\n                    setDeleteModalShow(true)\n                  }\n                >\n                  Delete\n                </Button>\n              </Row>\n              <br />\n            </>\n          ) : (\n            null\n          )\n          }\n          <Row>\n            <h6>\n              Last updated on&nbsp;\n              <span style={{ color: \"#0a66c2\" }}>\n                <Moment tz={ timeZone } format=\"DD/MM/YYYY\">\n                  { match.updatedAt }\n                </Moment>\n              </span>\n              &nbsp;at&nbsp;\n              <span style={{ color: \"#0a66c2\" }}>\n                <Moment tz={ timeZone } format=\"HH:mm\">\n                  { match.updatedAt }\n                </Moment>\n              </span>\n            </h6>\n          </Row>\n          <br />\n        </Container>\n        <Footer />\n        </>\n      )}\n    />\n  )\n}\n\nexport default Match;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Footer/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/userMatches.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/UserMatches.js",["162"],"import React, { useContext, useEffect } from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport { IsEmpty, Map } from \"react-lodash\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Cards from '../components/Cards';\nimport FiltersOffCanvas from '../components/FiltersOffCanvas';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport AdSense from 'react-adsense';\n\nfunction Matches() {\n  const { appMatchesOnLoad, filterValue, setFilterValue, show, userDataObj } = useContext(DataAreaContext);\n  let filterMatchesByUid;\n\n  useEffect(() => {\n    setFilterValue(\"\");\n  }, []);\n\n  if (Object.keys(userDataObj).length > 0) {\n    filterMatchesByUid = appMatchesOnLoad.filter(match => match.createdByUid === userDataObj.uid)\n  } else {\n    filterMatchesByUid = []\n  }\n\n  const sortedMatches = filterMatchesByUid.sort(function(a, b) {\n    return new Date(b.updatedAt) - new Date(a.updatedAt);\n  });\n  \n  return (\n    <>\n    <Header />\n    <Container>\n      <Row \n        className={(show) ? 'mt-3 mx-0' : ''}\n        style={{ backgroundColor: '#ffffff', boxShadow: '0 0 4px rgba(0,0,0,.1)', borderRadius: '.25rem' }}>\n        <FiltersOffCanvas \n          matches={sortedMatches}\n        />\n      </Row>\n      <Row className=\"ads-row mx-3\">\n        <AdSense.Google\n          client={process.env.REACT_APP_GOOGLE_ADSENSE}\n          slot='4238602370'\n          style={{ display: 'block' }}\n          format='auto'\n          responsive='true'\n          layoutKey='-gw-1+2a-9x+5c'\n        />\n      </Row>\n      <Row>\n      <IsEmpty\n        value={sortedMatches}\n        yes={() =>\n          <div>\n            <p>\n              You have not matches created 🤨\n            </p>\n          </div>\n        }\n        no={() => (\n          <Map collection={sortedMatches}\n            iteratee={match =>\n              (match.teamOneName.includes(filterValue.toLowerCase()) || match.teamTwoName.includes(filterValue.toLowerCase()))\n              ?\n              (\n                <Col lg={{ span: 4 }} md={{ span: 12 }} xs={{ span: 12 }}  className='mt-2 mb-3 px-0 user-match-col'>\n                  <Cards match={ match } />\n                </Col> \n              ) : \n              null\n            }\n          />\n        )}\n      />\n      </Row>\n    </Container>\n    <Footer />\n    </>\n  );\n}\n\nexport default Matches;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/CreateMatch.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/utils/Lib.js",["163"],"export default {\n  // Logs in a user\n  capitalize: function(str) {\n    return [...str].reduce(\n      (s, c, i, a) => s + (i === 0 || a[i - 1] === ' ' ? c.toUpperCase() : c),\n      ''\n    )\n  },\n  removeByAttr: function(arr, attr, value){\n    var i = arr.length;\n    while(i--){\n       if( arr[i] \n           && arr[i].hasOwnProperty(attr) \n           && (arguments.length > 2 && arr[i][attr] === value ) ){ \n           arr.splice(i,1);\n       }\n    }\n    return arr;\n  },\n  eliminateDuplicates: function(arr) {\n    var i,\n        len = arr.length,\n        out = [],\n        obj = {};\n  \n    for (i = 0; i < len; i++) {\n      obj[arr[i]] = 0;\n    }\n    for (i in obj) {\n      out.push(i);\n    }\n    return out;\n  },\n  compare: function( a, b ) {\n    if ( a.id < b.id ){\n      return 1;\n    }\n    if ( a.id > b.id ){\n      return -1;\n    }\n    return 0;\n  }\n}\n","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Signup.js",["164","165"],"import React, { useContext, useState } from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport UserAuthModal from \"../components/Modals/UserAuthModal\";\nimport Header from \"../components/Header\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst styles = makeStyles({\n\tpaper: {\n\t\tmarginTop: 8,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmargin: 1,\n\t\tbackgroundColor: 'grey'\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: 1\n\t},\n\tsubmit: {\n\t\tmargin: 3\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogess: {\n\t\tposition: 'absolute'\n\t}\n});\n\t\nconst inputFieldValues = [\n\t{\n\t\tname: \"firstName\",\n\t\tlabel: \"First Name\",\n\t\tid: \"firstName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\"\n\t},\n\t{\n\t\tname: \"lastName\",\n\t\tlabel: \"Last Name\",\n\t\tid: \"lastName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\"\n\t},\n\t{\n\t\tname: \"email\",\n\t\tlabel: \"Email address\",\n\t\tid: \"email\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\"\n\t},\n\t{\n\t\tname: \"password\",\n\t\tlabel: \"Password\",\n\t\tid: \"password\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"password\"\n\t},\n\t{\n\t\tname: \"confirmPassword\",\n\t\tlabel: \"Confirm Password\",\n\t\tid: \"confirmPassword\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"password\"\n\t},\n];\n\nfunction Signup() {\n\tconst { signUpObj, setSignUpObj, setUserDataObj, setUserAuthResponse, userAuthModalShow, setUserAuthModalShow } = useContext(DataAreaContext);\n  const [errors, setErrors] = useState({});\n\tconst [loading, setLoading] = useState( false );\n\tconst classes = styles();\n\n  // Handles updating component state when the user types into the input field\n  const handleInputChange = (event) => {\n\t\tevent.preventDefault();\n    const { name, value } = event.target;\n\t\tsetSignUpObj({...signUpObj, [name]: value});\n    validate(name, value);\n  };\n\n  const validate = (name, value) => {\n    let temp = { ...errors };\n\t\t\n\t\tswitch (name) {\n\t\t\tcase 'email':\n\t\t\t\tconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\t\t\ttemp.email = value.match(emailRegEx) ? \"\" : \"Email is not valid.\"\n\t\t\t\tbreak;\n\t\t\tcase 'password':\n\t\t\t\tif (\"confirmPassword\" in signUpObj) {\n\t\t\t\t\ttemp[name] = signUpObj.confirmPassword !== value ? \"Passwords much match.\" : \"\";\n\t\t\t\t\ttemp[\"confirmPassword\"] = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'confirmPassword':\n\t\t\t\tif (\"password\" in signUpObj) {\n\t\t\t\t\ttemp[name] = signUpObj.password !== value ? \"Passwords much match.\" : \"\";\n\t\t\t\t\ttemp[\"password\"] = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttemp[name] = !isNullOrEmpty(value) ? \"\" : \"This field is required.\";\n\t\t}\n\n    setErrors({\n      ...temp\n    });\n  };\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n\n\t\tconst actionCodeSettings = {\n\t\t\turl: 'https://inter-club-golf-live.web.app/login',\n\t\t\thandleCodeInApp: false\n\t\t};\n\n    firebase\n    .auth()\n    .createUserWithEmailAndPassword(\n      signUpObj.email, \n      signUpObj.password\n    )\n\t\t.then((response) => {\n\t\t\tresponse.user.sendEmailVerification(actionCodeSettings);\n\t\t\tresponse.user.updateProfile({\n\t\t\t\tdisplayName: `${signUpObj.firstName} ${signUpObj.lastName}`\n\t\t\t});\n\t\t\tsetUserDataObj(response.user);\n\t\t\tfirebase.auth().signOut();\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: \"You're signup has been received. We've sent you an email verification. Please verify your email through the email you received to be able to complete the signup process.\",\n\t\t\t\tstatus: 200\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t})\n\t\t.catch(error => {\n\t\t\tsetUserAuthResponse({\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: 400\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tsetUserAuthModalShow(true);\n\t\t});\n\t};\n\n\tconst formIsValid = () => {\n\t\tconst isValid =\n\t\t\tsignUpObj.firstName &&\n\t\t\tsignUpObj.lastName &&\n\t\t\tsignUpObj.email &&\n\t\t\tsignUpObj.password &&\n\t\t\tsignUpObj.confirmPassword &&\n\t\t\tObject.values(errors).every((x) => x === \"\");\n\n\t\treturn isValid;\n\t};\n\n\tfunction isNullOrEmpty(v) {\n\t\treturn typeof v === 'undefined' || v === null || v.length === 0;\n\t}\n\n  return (\n    <>\n\t\t\t<UserAuthModal\n\t\t\t\tshow={userAuthModalShow}\n\t\t\t\tonHide={() => setUserAuthModalShow(false)} \n\t\t\t/>\n    \t<Header />\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\tCreate account\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t{inputFieldValues.map((inputFieldValue, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\trequired={inputFieldValue.required}\n\t\t\t\t\t\t\t\t\tfullWidth={inputFieldValue.fullWidth}\n\t\t\t\t\t\t\t\t\tid={inputFieldValue.id}\n\t\t\t\t\t\t\t\t\tlabel={inputFieldValue.label}\n\t\t\t\t\t\t\t\t\tname={inputFieldValue.name}\n\t\t\t\t\t\t\t\t\ttype={inputFieldValue.type}\n\t\t\t\t\t\t\t\t\terror={errors[inputFieldValue.name]}\n\t\t\t\t\t\t\t\t\tautoComplete={inputFieldValue.autoComplete}\n\t\t\t\t\t\t\t\t\tautoFocus={inputFieldValue.autoFocus}\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t{...(errors[inputFieldValue.name] && {\n\t\t\t\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\t\t\t\thelperText: errors[inputFieldValue.name]\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tdisabled={loading || !formIsValid()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Link href=\"login\" variant=\"body2\">\n\t\t\t\t\t\t\t\t\t{\"Already have an account? Sign in\"}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</>\n  )\n}\n\nexport default Signup;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/PostMatchForm/index.js",["166","167","168","169","170","171"],"import React, { useContext, useState, useEffect } from 'react';\nimport API from \"../../utils/API\";\nimport Lib from \"../../utils/Lib\";\nimport DataAreaContext from '../../utils/DataAreaContext';\nimport CreateMatchModal from '../Modals/CreateMatchModal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport competition from '../../assets/data/competitions.json';\nimport matchData from '../../assets/data/matchdata.json';\nimport rounds from '../../assets/data/competitionRounds.json';\nlet isEmpty = require('lodash.isempty');\n\nconst styles = makeStyles((theme) => ({\n\tpaper: {\n\t\tpaddingTop: 10,\n\t\tpaddingLeft: 10,\n\t\tpaddingRight: 10,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tbackgroundColor: '#ffffff'\n\t},\n\tavatar: {\n\t\tmargin: 1,\n\t\tbackgroundColor: 'grey'\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: 1\n\t},\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n\ttextField: {\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#0a66c2\"\n    },\n    \"& .MuiSvgIcon-root\": {\n      fill: \"#0a66c2\"\n    }\n\t},\n\tsubmit: {\n\t\tmargin: 0,\n\t\tmarginBottom: 30\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogress: {\n\t\tposition: 'absolute'\n\t}\n}));\n\nconst regions = [\n  {\n    region: 'leinster'\n  },\n  {\n    region: 'ulster'\n  },\n  {\n    region: 'munster'\n  },\n  {\n    region: 'connacht'\n  },\n  {\n    region: 'all ireland'\n  }\n];\n\nconst regionAreas = [\n  {\n    regionArea: 'north'\n  },\n  {\n    regionArea: 'south'\n  },\n  {\n    regionArea: 'east'\n  },\n  {\n    regionArea: 'west'\n  },\n  {\n    regionArea: 'central'\n  }\n];\n\nconst inputFieldValues = [\n\t{\n\t\tname: \"matchDate\",\n\t\tlabel: \"\",\n\t\tid: \"matchDate\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"date\",\n\t\tdefaultValue: \"\",\n\t\tselect: false,\n\t\thelperText: \"Choose the match date\"\n\t},\n\t{\n\t\tname: \"matchTime\",\n\t\tlabel: \"\",\n\t\tid: \"matchTime\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"time\",\n\t\tdefaultValue: \"00:23\",\n\t\tselect: false,\n\t\thelperText: \"Choose the match time\"\n\t},\n\t{\n\t\tname: \"competitionName\",\n\t\tlabel: \"\",\n\t\tid: \"competitionName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tdefaultValue: \"\",\n\t\tselect: true,\n\t\thelperText: \"Choose the name of the competition\"\n\t},\n\t{\n\t\tname: \"competitionRegion\",\n\t\tlabel: \"\",\n\t\tid: \"competitionRegion\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tdefaultValue: \"\",\n\t\tselect: true,\n\t\thelperText: \"Choose the region the competition is played in\"\n\t},\n\t{\n\t\tname: \"competitionRegionArea\",\n\t\tlabel: \"\",\n\t\tid: \"competitionRegionArea\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tdefaultValue: \"\",\n\t\tselect: true,\n\t\thelperText: \"Choose the area of the region the competition is played in (if applicable)\"\n\t},\n\t{\n\t\tname: \"competitionRound\",\n\t\tlabel: \"\",\n\t\tid: \"competitionRound\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tdefaultValue: \"\",\n\t\tselect: true,\n\t\thelperText: \"Choose the round of the competition\"\n\t},\n\t{\n\t\tname: \"neutralVenueName\",\n\t\tlabel: \"\",\n\t\tid: \"neutralVenueName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tvalue: \"\",\n\t\tselect: false,\n\t\thelperText: \"Enter the venue for the match if it is neutral\"\n\t},\n\t{\n\t\tname: \"teamOneName\",\n\t\tlabel: \"\",\n\t\tid: \"teamOneName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tvalue: \"\",\n\t\tselect: false,\n\t\thelperText: \"Choose the home team name\"\n\t},\n\t{\n\t\tname: \"teamTwoName\",\n\t\tlabel: \"\",\n\t\tid: \"teamTwoName\",\n\t\trequired: true,\n\t\tfullWidth: true,\n\t\tautoComplete: \"autoComplete\",\n\t\tautoFocus: false,\n\t\ttype: \"\",\n\t\tvalue: \"\",\n\t\tselect: false,\n\t\thelperText: \"Choose the away team name\"\n\t}\n];\n\nfunction PostMatch() {\n\tconst { appMatchesOnLoad, postMatchObj, setPostMatchObj, userDataObj, setAppMatchesOnLoad, timeZone, createMathModalShow, setCreateMatchModalShow, setCreateMatchResponse, setMatchObj, oldPostMatchObj, setOldPostMatchObj } = useContext(DataAreaContext);\n  const [errors, setErrors] = useState({});\n\tconst classes = styles();\n\tconst [loading, setLoading] = useState( false );\n\tlet filteredMatchArray = [];\n\n  useEffect(() => {\n    setPostMatchObj({});\n  }, []);\n\n  useEffect(() => {\n    setOldPostMatchObj({...postMatchObj});\n  }, [postMatchObj]);\n\n  // Handles updating component state when the user types into the input field\n  const handleInputChange = (event) => {\n\t\tevent.preventDefault();\n    const { name, value } = event.target;\n\n\t\tif (name === \"neutralVenueName\" || name === \"teamOneName\" || name === \"teamTwoName\") {\n\t\t\tif (!postMatchObj.hasOwnProperty(\"individualMatchesArray\")) {\n\t\t\t\tpostMatchObj[\"individualMatchesArray\"] = [];\n\t\t\t}\n\t\t\tupdateIndividualMatchDestination(name, value);\n\t\t}\n\n\t\tif (name === \"competitionRound\") {\n\t\t\trounds.map(function(round) {\n\t\t\t\tif (value === round.round) {\n\t\t\t\t\treturn setPostMatchObj({...postMatchObj, [name]: round});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tsetPostMatchObj({...postMatchObj, [name]: value});\n\t\t}\n  };\n\tconsole.log(postMatchObj);\n\n\tfunction updateIndividualMatchDestination(name, value) {\n\t\tlet oldValue = oldPostMatchObj[name];\n\t\t\n\t\tfor (let i = 0; i < postMatchObj.individualMatchesArray.length; i++) {\n\t\t\tlet individualMatch = postMatchObj.individualMatchesArray[i];\n\t\t\tif (!individualMatch.hasOwnProperty(\"matchDestination\")) continue;\n\t\t\tif (individualMatch.matchDestination.toLowerCase() === oldValue.toLowerCase()) {\n\t\t\t\tindividualMatch.matchDestination = Lib.capitalize(value);\n\t\t\t\tsetPostMatchObj({...postMatchObj, \"individualMatchesArray\": postMatchObj.individualMatch});\n\t\t\t}\n\t\t}\n\t}\n\n  const handleIndividualMatchFieldInputChange = (event, child) => {\n\t\tevent.preventDefault();\n    const { name, value } = event.target;\n\t\tconst id = isEmpty(event.target.id) ? child.props.id : event.target.id;\n\n    for (let i = 0; i < filteredMatchArray.length; i++) {\n      if (parseInt(id) === i) {\n\t\t\t\tlet object = filteredMatchArray[i];\n        for (const key in object) {\n          if (key === name) {\n            object[key] = value;\n\t\t\t\t\t\tsetPostMatchObj({...postMatchObj, \"individualMatchesArray\": filteredMatchArray});\n          }\n        }\n        return;\n      }\n    }\n  };\n\n\tlet homeTeamName = postMatchObj['teamOneName'];\n\tlet awayTeamName = postMatchObj['teamTwoName'];\n\tlet neutralVenueName = postMatchObj['neutralVenueName'];\n\tlet competitionName = postMatchObj['competitionName'];\n\t\n\tlet competitors = [\n\t\t{\n\t\t\tname: homeTeamName\n\t\t},\n\t\t{\n\t\t\tname: awayTeamName\n\t\t}\n\t];\n\n\n\tlet competitionObject;\n\tlet matchDestination = \"\";\n\n\tconst getIndividualMatchFields = () => {\n\t\tif (!isEmpty(neutralVenueName)) {\n\t\t\tcompetitors.push(\n\t\t\t\t{\n\t\t\t\t\tname: neutralVenueName\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\tlet textFields = [];\n\t\tfor (let i = 0; i < competition.length; i++) {\n\t\t\tif (competition[i].name === competitionName) {\n\t\t\t\tcompetitionObject = competition[i];\n\t\t\t}\n\t\t}\n\n\t\tif (isEmpty(competitionObject)) return;\n\t\tif (isEmpty(homeTeamName)) return;\n\t\tif (isEmpty(awayTeamName)) return;\n\n\t\tmatchData.filter(function(value, index, arr){ \n\t\t\tif (index < competitionObject.matches) {\n\t\t\t\tfilteredMatchArray.push(value);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfor (let i = 0; i < competitionObject.matches; i++) {\n\t\t\tif (postMatchObj.individualMatchesArray.length === 0) {\n\t\t\t\tmatchDestination = \"\";\n\t\t\t} else if (postMatchObj.individualMatchesArray[i].matchDestination === \"empty\") {\n\t\t\t\tmatchDestination = \"\";\n\t\t\t} else {\n\t\t\t\tmatchDestination = postMatchObj.individualMatchesArray[i].matchDestination;\n\t\t\t}\n\t\t\tconsole.log(matchDestination);\n\n\t\t\t{competitionObject.singlePlayer === true ? \n\t\t\t\ttextFields.push(\n\t\t\t\t\t<>\n\t\t\t\t\t<div \n\t\t\t\t\t\tid={i}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'homeMatchPlayerAName'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={false}\n\t\t\t\t\t\t\terror={errors['homeMatchPlayerAName']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\thelperText={`Match ${(i + 1)}: ${Lib.capitalize(homeTeamName)} player name (if known)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'awayMatchPlayerAName'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={false}\n\t\t\t\t\t\t\terror={errors['awayMatchPlayerAName']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\thelperText={`Match ${(i + 1)}: ${Lib.capitalize(awayTeamName)} player name (if known)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'matchDestination'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={true}\n\t\t\t\t\t\t\terror={errors['matchDestination']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\tvalue={matchDestination.toLowerCase()}\n\t\t\t\t\t\t\thelperText={'Choose the course the match is played at'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{competitors.map((clubName, index) => (\n\t\t\t\t\t\t\t\t<MenuItem id={i} key={index} value={clubName.name}>\n\t\t\t\t\t\t\t\t\t{Lib.capitalize(clubName.name)}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t<Divider fullWidth light={false} />\n\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t) :\n\t\t\t\ttextFields.push(\n\t\t\t\t\t<>\n\t\t\t\t\t<div \n\t\t\t\t\t\tid={i}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'homeMatchPlayerAName'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={false}\n\t\t\t\t\t\t\terror={errors['homeMatchPlayerAName']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\thelperText={`Match ${(i + 1)}: ${Lib.capitalize(homeTeamName)} player A name (if known)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'homeMatchPlayerBName'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={false}\n\t\t\t\t\t\t\terror={errors['homeMatchPlayerBName']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\thelperText={`Match ${(i + 1)}: ${Lib.capitalize(homeTeamName)} player B name (if known)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'awayMatchPlayerAName'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={false}\n\t\t\t\t\t\t\terror={errors['awayMatchPlayerAName']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\thelperText={`Match ${(i + 1)}: ${Lib.capitalize(awayTeamName)} player A name (if known)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'awayMatchPlayerBName'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={false}\n\t\t\t\t\t\t\terror={errors['awayMatchPlayerBName']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\thelperText={`Match ${(i + 1)}: ${Lib.capitalize(awayTeamName)} player B name (if known)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tkey={i+1}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tname={'matchDestination'}\n\t\t\t\t\t\t\ttype=''\n\t\t\t\t\t\t\tselect={true}\n\t\t\t\t\t\t\terror={errors['matchDestination']}\n\t\t\t\t\t\t\tautoComplete={'autoComplete'}\n\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\tonChange={handleIndividualMatchFieldInputChange}\n\t\t\t\t\t\t\thelperText={'Choose the course the match is played at'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{competitors.map((clubName, index) => (\n\t\t\t\t\t\t\t\t<MenuItem id={i} key={index} value={clubName.name}>\n\t\t\t\t\t\t\t\t\t{Lib.capitalize(clubName.name)}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t<Divider fullWidth light={false} />\n\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\treturn textFields;\n\t}\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetLoading(true);\n    API.postMatch({\n\t\t\ttimeZone: timeZone,\n      matchDateTime: moment(`${postMatchObj.matchDate} ${postMatchObj.matchTime}`).format(),\n      createdAt: moment().format(),\n      updatedAt: moment().format(),\n      competitionName: postMatchObj.competitionName,\n\t\t\tcompetitionConcatRegion: !isEmpty(postMatchObj.competitionRegionArea) ? postMatchObj.competitionRegion + \" \" + postMatchObj.competitionRegionArea : postMatchObj.competitionRegion,\n      competitionRegion: postMatchObj.competitionRegion,\n\t\t\tcompetitionRegionArea: !isEmpty(postMatchObj.competitionRegionArea) ? postMatchObj.competitionRegionArea : \"\",\n      competitionRound: postMatchObj.competitionRound,\n      numIndividualMatches: competitionObject.matches,\n\t\t\tindividualMatch: !isEmpty(postMatchObj.individualMatchesArray) ? postMatchObj.individualMatchesArray : filteredMatchArray,\n      teamOneName: postMatchObj.teamOneName,\n      teamTwoName: postMatchObj.teamTwoName,\n      neutralVenueName: !isEmpty(postMatchObj.neutralVenueName) ? postMatchObj.neutralVenueName : \"\",\n\t\t\tuid: userDataObj.uid,\n\t\t\tsinglePlayer: competitionObject.singlePlayer\n\t\t})\n\t\t.then((response) => {\n\t\t\tsetAppMatchesOnLoad([response.data, ...appMatchesOnLoad]);\n\t\t\tsetMatchObj({...response.data});\n\t\t\tsetCreateMatchResponse({\n\t\t\t\tmatchId: response.data.matchId,\n\t\t\t\tmessage: \"Match created successfully\",\n\t\t\t\tstatus: 200\n\t\t\t});\n\t\t\tsetCreateMatchModalShow(true);\n      setPostMatchObj({});\n      setLoading(false);\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error);\n\t\t\tsetCreateMatchResponse({\n\t\t\t\tmessage: error.response.data.error,\n\t\t\t\tstatus: error.response.status\n\t\t\t});\n\t\t\tsetCreateMatchModalShow(true);\n\t\t\tsetLoading(false);\n\t\t});\n\t};\n\n\tconst formIsValid = () => {\n\t\tconst isValid =\n\t\t\tpostMatchObj.matchDate &&\n\t\t\tpostMatchObj.matchTime &&\n\t\t\tpostMatchObj.competitionName &&\n\t\t\tpostMatchObj.competitionRegion &&\n\t\t\tpostMatchObj.competitionRound &&\n\t\t\tpostMatchObj.teamOneName &&\n\t\t\tpostMatchObj.teamTwoName\n\n\t\treturn isValid;\n\t};\n\n\treturn (\n\t\t<>\n\t\t<CreateMatchModal\n\t\t\tshow={createMathModalShow}\n\t\t\tonHide={() => setCreateMatchModalShow(false)} \n\t\t/>\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\" style={{ color: \"#0a66c2\" }}>\n\t\t\t\t\tCreate Match\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t{inputFieldValues.map((inputFieldValue, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired={inputFieldValue.required}\n\t\t\t\t\t\t\t\tfullWidth={inputFieldValue.fullWidth}\n\t\t\t\t\t\t\t\tid={inputFieldValue.id}\n\t\t\t\t\t\t\t\tlabel={inputFieldValue.label}\n\t\t\t\t\t\t\t\tname={inputFieldValue.name}\n\t\t\t\t\t\t\t\ttype={inputFieldValue.type}\n\t\t\t\t\t\t\t\tdefaultValue={inputFieldValue.defaultValue}\n\t\t\t\t\t\t\t\tselect={inputFieldValue.select}\n\t\t\t\t\t\t\t\terror={errors[inputFieldValue.name]}\n\t\t\t\t\t\t\t\tautoComplete={inputFieldValue.autoComplete}\n\t\t\t\t\t\t\t\tautoFocus={inputFieldValue.autoFocus}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\thelperText={inputFieldValue.helperText}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{inputFieldValue.id === 'competitionName' ? \n\t\t\t\t\t\t\t\t\tcompetition.map((competition, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={competition.name}>\n\t\t\t\t\t\t\t\t\t\t\t{competition.name}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{inputFieldValue.id === 'competitionRegion' ? \n\t\t\t\t\t\t\t\t\tregions.map((region, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={region.region}>\n\t\t\t\t\t\t\t\t\t\t\t{Lib.capitalize(region.region)}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{inputFieldValue.id === 'competitionRegionArea' ? \n\t\t\t\t\t\t\t\t\tregionAreas.map((regionArea, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={regionArea.regionArea}>\n\t\t\t\t\t\t\t\t\t\t\t{Lib.capitalize(regionArea.regionArea)}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{inputFieldValue.id === 'competitionRound' ? \n\t\t\t\t\t\t\t\t\trounds.map((round, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={round.round}>\n\t\t\t\t\t\t\t\t\t\t\t{Lib.capitalize(round.round)}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t{!isEmpty(postMatchObj.competitionName) && !isEmpty(postMatchObj.teamOneName) && !isEmpty(postMatchObj.teamTwoName) ?\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\" style={{ color: \"#0a66c2\" }}>\n\t\t\t\t\t\t\tIndividual Matches\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t{getIndividualMatchFields()}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\tdisabled={loading || !formIsValid()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progress} />}\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport default PostMatch;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UpdateModal/index.js",["172"],"import React, { useContext, useEffect, useState } from 'react';\nimport DataAreaContext from '../../../utils/DataAreaContext';\nimport API from '../../../utils/API';\nimport UpdateMatchForm from '../../UpdateMatchForm/index.js';\nimport { Button, Modal, Spinner } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment-timezone';\nlet isEmpty = require('lodash.isempty');\n\nfunction UpdateModal(props) {\n  const { setUpdateModalShow, setMatchObj, match, setUpdateResponse, updateResponse, updateMatchObj, setUpdateMatchObj, setOldUpdateMatchObj, appMatchesOnLoad } = useContext(DataAreaContext);\n\tlet history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setUpdateMatchObj({...match});\n    setOldUpdateMatchObj({...match});\n  }, []);\n\n  const updateOverallMatchScore = (object) => {\n    let array = object.individualMatch;\n    let teamOneOverallScore = 0;\n    let teamTwoOverallScore = 0;\n    for (const i of array) {\n      if (i.homeMatchScore === i.awayMatchScore) {\n        teamOneOverallScore += 0.5;\n        teamTwoOverallScore += 0.5;\n      } else if (i.homeMatchScore < i.awayMatchScore) {\n        teamTwoOverallScore += 1;\n      } else if (i.homeMatchScore > i.awayMatchScore) {\n        teamOneOverallScore += 1;\n      }\n    }\n    return {\n      teamOneScore: teamOneOverallScore,\n      teamTwoScore: teamTwoOverallScore\n    }\n  }\n\n  const handleUpdateClick = (event) => {\n    event.preventDefault();\n    setLoading(true);\n    const updatedOverallMatchScore = updateOverallMatchScore(updateMatchObj);\n    updateMatchObj.teamOneScore = updatedOverallMatchScore.teamOneScore;\n    updateMatchObj.teamTwoScore = updatedOverallMatchScore.teamTwoScore;\n    API.updateMatch({\n      matchId: updateMatchObj.matchId,\n      matchStatus: updateMatchObj.matchStatus,\n\t\t\tcompetitionConcatRegion: !isEmpty(updateMatchObj.competitionRegionArea) ? updateMatchObj.competitionRegion + \" \" + updateMatchObj.competitionRegionArea : updateMatchObj.competitionRegion,\n      competitionRegion: updateMatchObj.competitionRegion,\n\t\t\tcompetitionRegionArea: !isEmpty(updateMatchObj.competitionRegionArea) ? updateMatchObj.competitionRegionArea : \"\",\n      competitionRound: updateMatchObj.competitionRound,\n      teamOneName: updateMatchObj.teamOneName,\n      teamOneScore: updateMatchObj.teamOneScore,\n      teamTwoName: updateMatchObj.teamTwoName,\n      teamTwoScore: updateMatchObj.teamTwoScore,\n      neutralVenueName: updateMatchObj.neutralVenueName,\n      individualMatch: updateMatchObj.individualMatch,\n      updatedAt: moment().format()\n    })\n    .then((response) => {\n      setUpdateResponse({\n        message: response.data.message,\n        status: response.status\n      });\n      setMatchObj({...updateMatchObj});\n      for (let i = 0; i < appMatchesOnLoad.length; i++) {\n        if(appMatchesOnLoad[i].matchId === updateMatchObj.matchId) {\n          appMatchesOnLoad[i] = updateMatchObj;\n        }\n      }\n      setLoading(false);\n    })\n    .catch((error) => {\n      setUpdateResponse({\n        message: error.message,\n        status: 400\n      });\n    });\n  };\n\n  function handleCloseClick(matchId) {\n    setUpdateModalShow(false);\n    setUpdateResponse({});\n    history.push(`/match/${matchId}`);\n  }\n\n  return (\n    <>\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"true\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Update match\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {updateResponse.status === 200 || updateResponse.status === 400 ? (\n          `${ updateResponse.message }`\n        ) : (\n          <UpdateMatchForm />\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        {updateResponse.status === 200 || updateResponse.status === 400 ?\n          <Button \n          onClick={ () => handleCloseClick(match.matchId) }\n          variant=\"outline-success\"\n          >\n            Close\n          </Button>\n          :\n          <Button\n          onClick={ (e) => handleUpdateClick(e) }\n          variant=\"outline-success\"\n          >\n          {isLoading ?\n            <Spinner animation=\"border\" style={{ color: \"#0a66c2\" }} /> \n          :\n            'Update'\n          }\n          </Button>\n        }\n      </Modal.Footer>\n    </Modal>\n    </>\n  );\n}\n\nexport default UpdateModal;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/DeleteModal/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/CreateMatchModal/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/LocalStorage/LocalStorage.service.js",["173"],"export default {\n  get: function(key) {\n    return localStorage.getItem(key);\n  },\n  set: function (key, value) {\n    return localStorage.setItem(key, value);\n  },\n  remove: function(key) {\n    return localStorage.removeItem(key);\n  },\n  clear: function() {\n    return localStorage.clear();\n  }\n}","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/services/SessionStorage/SessionStorage.service.js",["174"],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/BurgerMenuIcon/index.js",[],["175","176"],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/SideBar/index.js",["177"],"import React, { useContext, useState } from 'react';\nimport Burger from '../BurgerMenuIcon';\nimport styled from 'styled-components';\nimport DataAreaContext from '../../utils/DataAreaContext';\nimport LocalStorage from '../../services/LocalStorage/LocalStorage.service';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faGolfBall, faSignInAlt, faUserPlus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst StyledMenu = styled.nav`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background: #f3f2ef;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  height: 100vh;\n  text-align: left;\n  padding: 2rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n\n  @media (max-width: 576px) {\n      width: 100%;\n    }\n\n  a {\n    font-size: 1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.5rem;\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 1.25rem;\n      text-align: left;\n    }\n  }\n`\n\nfunction SideBar() {\n  const { isAuthenticated, setFilterValue, userDataObj, setUserDataObj, setIsAuthenticated, sidebarOpen, setSidebarOpen } = useContext(DataAreaContext);\n  const location = useLocation();\n\tconst [errors, setErrors] = useState( [] );\n\n  const onClickSignOutUser = (e) => {\n\t\te.preventDefault();\n    firebase.auth().signOut()\n\t\t.then((response) => {\n\t\t\tLocalStorage.remove('AuthToken');\n\t\t\tsetUserDataObj({});\n      setSidebarOpen(false);\n\t\t\tsetIsAuthenticated(false);\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetErrors(error.response);\n\t\t});\n  }\n\n  const onClick = () => {\n    setFilterValue(\"\");\n    setSidebarOpen(false);\n  }\n\n  return (\n    <>\n    <StyledMenu open={sidebarOpen}>\n      <Burger open={sidebarOpen} setOpen={setSidebarOpen} style={{ float: \"right\" }}/>\n      <Nav justify className=\"mb-0 flex-column\" activeKey={location.pathname}>\n        <Nav.Item className=\"mx-0\">\n          <Nav.Link className='px-0 py-4' as={ Link } to=\"/\" eventKey=\"/\" onClick={() => onClick()}>\n            <FontAwesomeIcon icon={ faHome } className='fa-lg'/>\n            <span className='mb-0'> Home</span>\n          </Nav.Link>\n        </Nav.Item>\n        {!isAuthenticated ? (\n          <>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4' as={ Link } to=\"/login\" eventKey=\"/login\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faSignInAlt } className='fa-lg'/>\n              <span className='mb-0'> Login</span>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to=\"/signup\" eventKey=\"/signup\" id=\"sign-up\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faUserPlus } className='fa-lg'/>\n              <span className='mb-0'> Signup</span>\n            </Nav.Link>\n          </Nav.Item>\n          </>\n        ) : (\n          <>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to={ \"/usermatches/\" + userDataObj.uid } eventKey={ \"/usermatches/\" + userDataObj.uid } id=\"usermatches\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faGolfBall } className='fa-lg'/>\n              <span className='mb-0'> My matches</span>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to=\"/creatematch\" eventKey=\"/creatematch\" id=\"creatematch\" onClick={() => onClick()}>\n              <FontAwesomeIcon icon={ faPlus } className='fa-lg'/>\n              <span className='mb-0'> Create match</span>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"mx-0\">\n            <Nav.Link className='px-0 py-4 pr-md-0' as={ Link } to=\"/login\" eventKey=\"/login\" onClick={(e) => onClickSignOutUser(e)}>\n              <FontAwesomeIcon icon={ faSignInAlt } className='fa-lg'/>\n              <span className='mb-0'> Logout</span>\n            </Nav.Link>\n          </Nav.Item>\n          </>\n        )}\n      </Nav>\n    </StyledMenu>\n    </>\n  );\n}\n\nexport default SideBar;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Modals/UserAuthModal/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/UpdateMatchForm/index.js",["178","179","180","181"],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Carousel/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/Competitions.js",["182","183"],"import React, { useContext, useEffect, useState} from 'react';\nimport DataAreaContext from '../utils/DataAreaContext';\nimport API from '../utils/API';\nimport Lib from '../utils/Lib';\nimport { IsEmpty } from \"react-lodash\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport FiltersOffCanvas from '../components/FiltersOffCanvas';\nimport { Container, Table, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nfunction Competition () {\n  const { filterValue, setFilterValue, matchesByCompetition, setMatchesByCompetition, setMatchObj } = useContext(DataAreaContext);\n  let { competition } = useParams();\n  const history = useHistory();\n  const competitionName = decodeURIComponent(competition);\n  const [response, setResponse] = useState({});\n  const [matchesObjByRegion, setMatchesObjByRegion] = useState({});\n\n  useEffect(() => {\n    setFilterValue(\"\");\n    setMatchesByCompetition([]);\n    getMatchesByCompetition();\n  }, []);\n\n  async function getMatchesByCompetition() {\n    await API.getMatchesByCompetitionOnLoad(competition)\n      .then(res => {\n        setMatchesByCompetition(res.data);\n        setMatchesObjByRegion(matchesByRegion(res.data));\n        setResponse({ code: 200 });\n      })\n      .catch(err => console.log(err));\n  }\n\n  const matchesByRegion = (matches) => {\n    let matchesByRegion = {};\n\n    for (let i = 0; i < matches.length; i++) {\n      const match = matches[i];\n      \n      const concatRegion = match.competitionConcatRegion;\n      const matchId = match.matchId;\n\n      if (!matchesByRegion.hasOwnProperty(concatRegion)) {\n        matchesByRegion[concatRegion] = {};\n      }\n\n      if (!matchesByRegion[concatRegion].hasOwnProperty(matchId)) {\n        matchesByRegion[concatRegion][matchId] = {};\n      }\n      \n      matchesByRegion[concatRegion][matchId] = match;\n    }\n\n    return matchesByRegion;\n  }\n\n  const concatRegions = matchesByCompetition.map(function(match) {\n    return match.competitionConcatRegion;\n  });\n\n  const sortedRegions = Lib.eliminateDuplicates(concatRegions).sort();\n\n  const returnMatchesByRegionInArray = (region) => {\n    let matches = [];\n\n    for (const key in matchesObjByRegion) {\n      if (key === region) {\n        for (const key in matchesObjByRegion[region]) {\n          matches.push(matchesObjByRegion[region][key]);\n        }\n      }\n    }\n\n    return matches;\n  }\n\n  const getRoundsByRegion = (matches) => {\n    const rounds = matches.map(function(match) {\n      return match.competitionRound;\n    });\n  \n    const sortedRounds = rounds.sort(Lib.compare);\n  \n    const roundArray = sortedRounds.map(function(round) {\n      return round.round;\n    });\n  \n    return Lib.eliminateDuplicates(roundArray);\n  }\n\n  const getTableRows = (match) => {\n    if (match.teamOneName.includes(filterValue.toLowerCase()) || match.teamTwoName.includes(filterValue.toLowerCase())) {\n      return (\n        <>\n        <tr key={match.matchId} onClick={(e) => onClickRow(e, match)} style={{ cursor: \"pointer\" }}>\n          <td>{Lib.capitalize(match.teamOneName)}</td>\n          <td style={{ background: '#0a66c2' }}>\n            {getScore(match)}\n          </td>\n          <td>{Lib.capitalize(match.teamTwoName)}</td>\n        </tr>\n        <tr>\n          <td colSpan=\"3\">{Lib.capitalize(match.matchStatus)}</td>\n        </tr>\n        </>\n      )\n    }\n  }\n\n  const onClickRow = (e, match) => {\n    e.preventDefault();\n    setMatchObj(match);\n    const path = \"/match/\" + match.matchId;\n    history.push(path);\n  }\n\n  const getScore = (match) => {\n    if (match.teamOneScore > match.teamTwoScore) {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          <span style={{ float: 'left' }}><FontAwesomeIcon icon={ faArrowLeft } className='fa-sm' /></span>{match.teamOneScore} - {match.teamTwoScore}\n        </div>\n      )\n    } else if (match.teamOneScore < match.teamTwoScore) {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          {match.teamOneScore} - {match.teamTwoScore}<span style={{ float: 'right' }}><FontAwesomeIcon icon={ faArrowRight } className='fa-sm' /></span>\n        </div>\n      )\n    } else {\n      return (\n        <div style={{ color: '#ffffff', fontWeight: '900' }}>\n          A/S\n        </div>\n      )\n    }\n  }\n  \n  return (\n    <>\n    <Container fluid={ true } className=\"p-0\">\n      <FiltersOffCanvas\n        matches={matchesByCompetition}\n      />\n      <Header />\n      <div>\n        <div style={{ marginTop: '25px', paddingTop: '15px', textAlign: 'center' }}>\n          <h4>{competitionName}</h4>\n        </div>\n        <IsEmpty\n          value={matchesByCompetition}\n          yes={() =>\n            <>\n            {response.code === 200 ?\n              <div style={{ textAlign: \"center\" }}>\n                <br />\n                <br />\n                <h5>There are no matches created for this tournament yet 🙁</h5>\n              </div>\n              :\n              <>\n              <br />\n              <div style={{ textAlign: \"center\" }}>\n                <Spinner animation=\"grow\" style={{ color: \"#0a66c2\" }} />\n              </div>\n              <br />\n              </>\n            }\n            </>\n          }\n          no={() => (\n            <>\n            {sortedRegions.map(function(region) {\n              let matchesArrByRegion = returnMatchesByRegionInArray(region);\n              let rounds = getRoundsByRegion(matchesArrByRegion);\n              return (\n                <>\n                <div style={{ marginTop: '25px', paddingTop: '15px', textAlign: 'center' }}>\n                  <h4>{Lib.capitalize(region)}</h4>\n                </div>\n                <div>\n                  <>\n                  {\n                    rounds.map(function(round) {\n                      return (\n                        <>\n                        <Table hover size=\"sm\" className=\"caption-top\" style={{ tableLayout: 'fixed' }}>\n                          <caption style={{ color: '#0a66c2', fontWeight: '900', textAlign: 'center' }}>{Lib.capitalize(round)}</caption>\n                          <thead>\n                            <tr>\n                              <th>Home Team</th>\n                              <th>Score</th>\n                              <th>Away Team</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {\n                              matchesArrByRegion.map(function(match) {\n                                if (match.competitionRound.round === round) {\n                                  return (\n                                    getTableRows(match)\n                                  )\n                                }\n                              })\n                            }\n                          </tbody>\n                        </Table>\n                        </>\n                      )}\n                    )\n                  }\n                  </>\n                </div>\n                </>\n              )}\n            )}\n            </>\n          )}\n        />\n      </div>\n      <Footer />\n    </Container>\n    </>\n  );\n}\n\nexport default Competition;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/ComboBox/index.js",["184"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport competitions from '../../assets/data/competitions.json';\n\nconst useStyles = makeStyles({\n  root: {\n    \"& .MuiInputLabel-outlined\": {\n      color: \"#ffffff\"\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#0a66c2\",\n      backgroundColor: \"#0a66c2\"\n    },\n    \"& .MuiSvgIcon-root\": {\n      fill: \"#ffffff!important\"\n    }\n  }\n});\n\nfunction ComboBox() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  function handleInputChange(event, value) {\n\t\tevent.preventDefault();\n\n    competitions.map(function(competition) {\n      if (value === competition.name) {\n        const encodedURI = encodeURIComponent(value);\n        history.push('/competition/' + encodedURI);\n\t\t\t}\n\t\t});\n\t};\n\n\treturn (\n    <Autocomplete\n      id=\"combo-box-demo\"\n      className={classes.root}\n      options={competitions}\n      getOptionLabel={(option) => option.name}\n      onInputChange={handleInputChange}\n      renderInput={(params) => <TextField {...params} label=\"Choose a competition\" variant=\"outlined\" />}\n    />\n\t);\n}\n\nexport default ComboBox;","/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/Wrapper/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/components/FiltersOffCanvas/index.js",[],"/Users/darren.behan/Documents/GitHub/inter-club-golf-live/client/src/pages/About.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":9,"column":8,"nodeType":"191","messageId":"192","endLine":9,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":59,"column":5,"nodeType":"195","endLine":59,"endColumn":22,"suggestions":"196"},{"ruleId":"193","severity":1,"message":"197","line":31,"column":6,"nodeType":"195","endLine":31,"endColumn":8,"suggestions":"198"},{"ruleId":"193","severity":1,"message":"199","line":17,"column":6,"nodeType":"195","endLine":17,"endColumn":8,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":1,"nodeType":"203","endLine":43,"endColumn":2},{"ruleId":"204","severity":1,"message":"205","line":117,"column":34,"nodeType":"206","messageId":"207","endLine":117,"endColumn":35,"suggestions":"208"},{"ruleId":"204","severity":1,"message":"205","line":117,"column":59,"nodeType":"206","messageId":"207","endLine":117,"endColumn":60,"suggestions":"209"},{"ruleId":"189","severity":1,"message":"210","line":226,"column":18,"nodeType":"191","messageId":"192","endLine":226,"endColumn":27},{"ruleId":"193","severity":1,"message":"211","line":233,"column":6,"nodeType":"195","endLine":233,"endColumn":8,"suggestions":"212"},{"ruleId":"193","severity":1,"message":"213","line":237,"column":6,"nodeType":"195","endLine":237,"endColumn":20,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":252,"column":15,"nodeType":"217","messageId":"218","endLine":252,"endColumn":23},{"ruleId":"215","severity":1,"message":"219","line":333,"column":20,"nodeType":"217","messageId":"220","endLine":333,"endColumn":28},{"ruleId":"221","severity":1,"message":"222","line":349,"column":4,"nodeType":"223","messageId":"224","endLine":509,"endColumn":5},{"ruleId":"193","severity":1,"message":"225","line":19,"column":6,"nodeType":"195","endLine":19,"endColumn":8,"suggestions":"226"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":1,"nodeType":"203","endLine":14,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":1,"column":1,"nodeType":"203","endLine":10,"endColumn":2},{"ruleId":"185","replacedBy":"227"},{"ruleId":"187","replacedBy":"228"},{"ruleId":"189","severity":1,"message":"229","line":48,"column":9,"nodeType":"191","messageId":"192","endLine":48,"endColumn":15},{"ruleId":"189","severity":1,"message":"210","line":63,"column":18,"nodeType":"191","messageId":"192","endLine":63,"endColumn":27},{"ruleId":"193","severity":1,"message":"230","line":68,"column":6,"nodeType":"195","endLine":68,"endColumn":22,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":330,"column":17,"nodeType":"234","messageId":"235","endLine":330,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":380,"column":4,"nodeType":"223","messageId":"224","endLine":663,"endColumn":5},{"ruleId":"193","severity":1,"message":"236","line":27,"column":6,"nodeType":"195","endLine":27,"endColumn":8,"suggestions":"237"},{"ruleId":"215","severity":1,"message":"216","line":203,"column":54,"nodeType":"217","messageId":"218","endLine":203,"endColumn":62},{"ruleId":"215","severity":1,"message":"238","line":30,"column":22,"nodeType":"217","messageId":"220","endLine":30,"endColumn":30},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'AdSense' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["241"],"React Hook useEffect has missing dependencies: 'getMatchOnLoad', 'match', and 'setUpdateMatchObj'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'setFilterValue'. Either include it or remove the dependency array.",["243"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["244","245"],["246","247"],"'setErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPostMatchObj'. Either include it or remove the dependency array.",["248"],"React Hook useEffect has a missing dependency: 'setOldPostMatchObj'. Either include it or remove the dependency array.",["249"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","Array.prototype.filter() expects a return value from function.","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'match', 'setOldUpdateMatchObj', and 'setUpdateMatchObj'. Either include them or remove the dependency array.",["250"],["239"],["240"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setOldUpdateMatchObj'. Either include it or remove the dependency array.",["251"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getMatchesByCompetition', 'setFilterValue', and 'setMatchesByCompetition'. Either include them or remove the dependency array.",["252"],"Array.prototype.map() expects a return value from function.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"messageId":"259","fix":"260","desc":"261"},{"messageId":"262","fix":"263","desc":"264"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"262","fix":"266","desc":"264"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"277","text":"278"},"Update the dependencies array to be: [getMatchOnLoad, match, setUpdateMatchObj]",{"range":"279","text":"280"},"Update the dependencies array to be: [setFilterValue]",{"range":"281","text":"282"},"removeEscape",{"range":"283","text":"284"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"285","text":"286"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"287","text":"284"},{"range":"288","text":"286"},"Update the dependencies array to be: [setPostMatchObj]",{"range":"289","text":"290"},"Update the dependencies array to be: [postMatchObj, setOldPostMatchObj]",{"range":"291","text":"292"},"Update the dependencies array to be: [match, setOldUpdateMatchObj, setUpdateMatchObj]",{"range":"293","text":"294"},"Update the dependencies array to be: [setOldUpdateMatchObj, updateMatchObj]",{"range":"295","text":"296"},"Update the dependencies array to be: [getMatchesByCompetition, setFilterValue, setMatchesByCompetition]",{"range":"297","text":"298"},[1788,1805],"[history, isAuthenticated]",[1325,1327],"[getMatchOnLoad, match, setUpdateMatchObj]",[643,645],"[setFilterValue]",[2718,2719],"",[2718,2718],"\\",[2743,2744],[2743,2743],[4972,4974],"[setPostMatchObj]",[5046,5060],"[postMatchObj, setOldPostMatchObj]",[829,831],"[match, setOldUpdateMatchObj, setUpdateMatchObj]",[1691,1707],"[setOldUpdateMatchObj, updateMatchObj]",[1204,1206],"[getMatchesByCompetition, setFilterValue, setMatchesByCompetition]"]